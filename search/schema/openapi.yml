openapi: 3.0.0
servers:
  - url: 'https://sciapps.colorado.edu/onestop-search'
    description: Development test server (uses test data)
  - url: 'https://data.noaa.gov/onestop/api/search-search'
    description: NOAA OneStop
info:
  title: OneStop Search API
  description: 'Search Collections and Granules! More information on search request and responses available at [Search API Requests](https://github.com/cedardevs/onestop/wiki/OneStop-Search-API-Requests) and [Search API Responses](https://github.com/cedardevs/onestop/wiki/OneStop-Search-API-Responses).'
  version: 2.4.0
tags:
  - name: collection
    description: Discover available collections of data.
  - name: granule
    description: Discover available files of data.
  - name: flattened-granule
    description: Flattened granules are a representation of the granules which inherit all the metadata from the parent collection.
paths:
  /collection:
    head:
      operationId: headCollection
      tags:
        - collection
      summary: Get Collection Info
      responses:
        '200':
          description: Successful operation
    get:
      operationId: getCollection
      tags:
        - collection
      summary: Get Collection Info
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/infoResponse'
  '/collection/{id}':
    head:
      operationId: headCollectionById
      tags:
        - collection
      summary: Collection by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the collection
      responses:
        '200':
          description: Successful operation
        '404':
          description: Request Parsing Error
    get:
      operationId: getCollectionById
      tags:
        - collection
      summary: Collection by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the collection
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fullCollectionResponse'
        '404':
          description: Request Parsing Error
  /search/collection:
    post:
      operationId: searchCollection
      tags:
        - collection
      summary: Retrieve collection metadata
      description: 'Retrieve collection metadata records matching the text query string, spatial, and/or temporal filter.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
            examples:
              payload0:
                $ref: '#/components/examples/payload0'
              payload1:
                $ref: '#/components/examples/payload1'
              payload2:
                $ref: '#/components/examples/payload2'
              payload3:
                $ref: '#/components/examples/payload3'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
        '400':
          description: Bad Request
  /granule:
    head:
      operationId: headGranule
      tags:
        - granule
      summary: Get Granule Info
      responses:
        '200':
          description: Successful operation
    get:
      operationId: getGranule
      tags:
        - granule
      summary: Get Granule Info
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/infoResponse'
  '/granule/{id}':
    head:
      operationId: headGranuleById
      tags:
        - granule
      summary: Granule by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the granule
      responses:
        '200':
          description: Successful operation
        '404':
          description: Request Parsing Error
    get:
      operationId: getGranuleById
      tags:
        - granule
      summary: Granule by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the granule
      responses:
        '200':
          description: Successful operation
        '404':
          description: Request Parsing Error
  /search/granule:
    post:
      operationId: searchGranule
      tags:
        - granule
      summary: Retrieve granule metadata
      description: 'Retrieve granule metadata records matching the text query string, spatial, and/or temporal filter.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
        '400':
          description: Bad Request
  '/flattened-granule':
    head:
      operationId: headFlattenedGranule
      tags:
        - flattened-granule
      summary: Get Flattened Granule Info
      responses:
        '200':
          description: Successful operation
    get:
      operationId: getFlattenedGranule
      tags:
        - flattened-granule
      summary: Get Flattened Granule Info
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/infoResponse'
  '/flattened-granule/{id}':
    head:
      operationId: headFlattenedGranuleById
      tags:
        - flattened-granule
      summary: Flattened Granule by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the flattened granule
      responses:
        '200':
          description: Successful operation
        '404':
          description: Request Parsing Error
    get:
      operationId: getFlattenedGranuleById
      tags:
        - flattened-granule
      summary: Flattened Granule by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the flattened granule
      responses:
        '200':
          description: Successful operation
        '404':
          description: Request Parsing Error
  /search/flattened-granule:
    post:
      operationId: searchFlattenedGranule
      tags:
        - flattened-granule
      summary: Retrieve flattened granule metadata
      description: 'Retrieve flattened granule metadata records matching the text query string, spatial, and/or temporal filter.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
        '400':
          description: Bad Request
components:
  schemas:
    geometry:
      title: Geometry
      description: 'One geometry as defined by GeoJSON. Can be a point, multipoint, linestring, mutlilinestring, polygon, or multipolygon.'
      properties:
        queries:
          type: array
          items:
            oneOf:
              - $ref : '#/components/schemas/Point'
              - $ref : '#/components/schemas/MultiPoint'
              - $ref : '#/components/schemas/LineString'
              - $ref : '#/components/schemas/MultiLineString'
              - $ref : '#/components/schemas/Polygon'
              - $ref : '#/components/schemas/MultiPolygon'
    polygon:
      description: An array of linear rings
      type: array
      items:
        $ref: "#/components/schemas/linearRing"
    position:
      description: A single position
      type: array
      minItems: 2
      maxItems: 2
      items:
        allOf:
        - description: longitudinal coordinate
          type: number
          minimum: -360
          maximum: 360
        - description: latitude coordinate
          type: number
          minimum: -90
          maximum: 90
      maxLength: 2
    positionArray:
      description: An array of positions
      type: array
      items:
        $ref: "#/components/schemas/position"
    lineString:
      description: An array of two or more positions
      allOf:
      - $ref: "#/components/schemas/positionArray"
      - minItems: 2
    linearRing:
      description: An array of four positions where the first equals the last
      allOf:
      - $ref: "#/components/schemas/positionArray"
      - minItems: 4
    Point:
      type: object
      properties:
        type:
          enum:
          - Point
        coordinates:
          $ref: "#/components/schemas/position"
      required:
      - type
      - coordinates
    MultiPoint:
      properties:
        type:
          enum:
          - MultiPoint
        coordinates:
          $ref: "#/components/schemas/positionArray"
      required:
      - type
      - coordinates
    LineString:
      properties:
        type:
          enum:
          - LineString
        coordinates:
          $ref: "#/components/schemas/lineString"
      required:
      - type
      - coordinates
    MultiLineString:
      properties:
        type:
          enum:
          - MultiLineString
        coordinates:
          type: array
          items:
            $ref: "#/components/schemas/lineString"
      required:
      - type
      - coordinates
    Polygon:
      properties:
        type:
          enum:
          - Polygon
        coordinates:
          $ref: "#/components/schemas/polygon"
      required:
      - type
      - coordinates
    MultiPolygon:
      properties:
        type:
          enum:
          - MultiPolygon
        coordinates:
          type: array
          items:
            $ref: "#/components/schemas/polygon"
      required:
      - type
      - coordinates
    dateTimeFilter:
      title: Datetime Filter
      description: Filter results by before, after, or a date range.
      type: object
      properties:
        type:
          description: Filter type.
          enum:
          - datetime
        before:
          description: End of the date range, e.g., look for all results *before* this date.
          type: string
          format: date-time
        after:
          description: Beginning of the date range, e.g., look for all results *after* this
            date.
          type: string
          format: date-time
        relation:
          description: How the result time range relates to the query time range, e.g.,
            return all datasets whose time range is within the given time range.
          enum:
          - contains
          - disjoint
          - intersects
          - within
          default: intersects
      required:
      - type
      additionalProperties: false
    yearFilter:
      title: Datetime Filter
      description: Filter results by before, after, or a date range.
      type: object
      properties:
        type:
          description: Filter type.
          enum:
          - datetime
        before:
          description: End of the date range, e.g., look for all results *before* this date.
          type: string
          format: date-time
        after:
          description: Beginning of the date range, e.g., look for all results *after* this
            date.
          type: string
          format: date-time
        relation:
          description: How the result time range relates to the query time range, e.g.,
            return all datasets whose time range is within the given time range.
          enum:
          - contains
          - disjoint
          - intersects
          - within
          default: intersects
      required:
      - type
      additionalProperties: false
    facetFilter:
      title: Facet Filter
      description: Filters results based on given terms (data formats, link protocols, service
        link protocols, GCMD keywords) where returned results MUST have the specified term
        values. Multiple facetFilter objects will be combined with logical AND; multiple
        values in a single facetFilter object will be combined with the logical OR.
      type: object
      properties:
        type:
          description: Filter type.
          enum:
          - facet
        name:
          description: 'One of the following: ''dataFormats'', ''linkProtocols'', ''serviceLinkProtocols'',
            or GCMD keyword categories (''science'', ''services'', ''locations'', ''instruments'',
            ''platforms'', ''projects'', ''dataCenters'', ''horizontalResolution'', ''verticalResolution'',
            ''temporalResolution'').'
          enum:
          - dataFormats
          - linkProtocols
          - serviceLinkProtocols
          - science
          - services
          - locations
          - instruments
          - platforms
          - projects
          - dataCenters
          - horizontalResolution
          - verticalResolution
          - temporalResolution
        values:
          description: List of terms to match
          type: array
          items:
            description: Exact match data format(s) (e.g. - "NETCDF"), link or service link
              protocol(s) (e.g. - "ftp"), or GCMD keyword(s) (e.g. - "Atmosphere > Atmospheric
              Temperature > Surface Temperature")
            type: string
      required:
      - type
      - name
      - values
      additionalProperties: false
    geometryFilter:
      title: Geometry Filter
      description: Filter that returns results whose bounding geometry contains the specified
        geographical coordinate.
      type: object
      properties:
        type:
          description: Filter type.
          enum:
          - geometry
        geometry:
          $ref: '#/components/schemas/geometry'
        relation:
          description: How the result geometry relates to the query geometry, e.g., return
            all datasets whose geometry contains the given point.
          enum:
          - contains
          - disjoint
          - intersects
          - within
          default: intersects
      required:
      - type
      - geometry
      additionalProperties: false
    collectionFilter:
      title: Collection Filter
      description: Filter granules by specific collection(s). If multiple collection filters
        are used, or multiple values in a single collection filter, then the search is performed
        with a logical OR.
      type: object
      properties:
        type:
          description: Filter type.
          enum:
          - collection
        values:
          description: List of collection UUIDs.
          type: array
          items:
            description: Collection UUID
            type: string
      required:
      - type
      - values
      additionalProperties: false
    textQuery:
      title: Text Query
      type: object
      description: When providing multiple queryText objects in your search request, keep
        in mind that they will be combined with a logical AND. Terms use Lucene Query Syntax.
      properties:
        type:
          description: Filter type.
          enum:
          - queryText
        value:
          description: Text query to search with that is valid so long as it does not have
            a leading wildcard ('*' or '?')
          type: string
          pattern: "^(?!\\s*[\\*\\?]+).*"
      required:
      - type
      - value
      additionalProperties: false
    excludeGlobalFilter:
      title: Exclude Global Filter
      description: Flag to request that geospatially global results be excluded. Defaults
        to false if not provided.
      type: object
      properties:
        type:
          description: Filter type.
          enum:
          - excludeGlobal
        value:
          type: boolean
          default: false
      required:
      - type
      - value
      additionalProperties: false
    requestBody:
      title: Search Request
      description: The shape of a search request body that can be sent to the OneStop API
        to execute a search against available metadata. Collections are returned by default
        unless a collection filter is included, resulting in granules being returned.
      type: object
      properties:
        queries:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/textQuery'
        filters:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/dateTimeFilter'
            - $ref: '#/components/schemas/yearFilter'
            - $ref: '#/components/schemas/facetFilter'
            - $ref: '#/components/schemas/geometryFilter'
            - $ref: '#/components/schemas/collectionFilter'
            - $ref: '#/components/schemas/excludeGlobalFilter'
        facets:
          description: Flag to request counts of results by GCMD keywords in addition to
            results.
          type: boolean
          default: false
        summary:
          description: Flag to request summary of search results instead of full set of
            attributes.
          type: boolean
          default: true
        page:
          $ref: components/page.json
      additionalProperties: false
    searchMetadataObject:
      type: object
      properties:
        took:
          type: integer
        total:
          description: total number of results matching the search
          type: integer
        facets:
          description: included if search request specified facets:true
          type: object
    searchDataObject:
      type: object
      properties:
        type:
          type: string
          enum:
          - collection
          - granule
          - flattened-granule
        id:
          description: internal uuid
          type: string
        attributes:
          description: Summary of the result. If search specified summary:false, this could
            be the entire result instead.
          type: object
          properties:
            title:
              type: string
            thumbnail:
              type: string
              format: uri
            beginYear:
              type: string
              format: date
            endYear:
              type: string
              format: date
            spatialBounding:
              "$ref": components/geometry.json
            links:
              type: array
              items:
                oneOf:
                - "$ref": "#/components/schemas/link"
    link:
      type: object
      properties:
        linkProtocol:
          type: string
        linkFunction:
          type: string
        linkDescription:
          type: string
        linkUrl:
          type: string
          format: uri
        linkName:
          type: string
    searchResponse:
      description: Search Results
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/searchMetadataObject'
        data:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/searchDataObject'
    infoResponse:
      description: High-level information on a resource.
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              type:
                type: string
                enum:
                - count
              id:
                type: string
                enum:
                - collection
                - granule
              count:
                type: integer
    fullCollectionResponse:
      description: Collection
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/collectionMetadataObject'
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/collectionDataObject'
    collectionMetadataObject:
      type: object
      properties:
        totalGranules:
          type: integer
    collectionDataObject:
      type: object
      properties:
        type:
          type: string
          enum:
            - collection
        id:
          type: string
  examples:
    payload0:
      value:
        queries:
          - type: queryText
            value: climate
        filters: []
        facets: true
        page:
          max: 20
          offset: 0
      summary: basic text query
    payload1:
      value:
        queries:
          - type: queryText
            value: weather
        filters:
          - type: facet
            name: science
            values:
              - Agriculture
              - Atmosphere > Atmospheric Radiation > Incoming Solar Radiation
        facets: true
        page:
          max: 20
          offset: 0
      summary: multiple science theme filters selected
    payload2:
      value:
        queries:
          - type: queryText
            value: weather
        filters:
          - type: facet
            name: science
            values:
              - Agriculture
          - type: facet
            name: instruments
            values:
              - ADCP > Acoustic Doppler Current Profiler
        facets: true
        page:
          max: 20
          offset: 0
      summary: multiple facets selected
    payload3:
      value:
        queries:
          - type: queryText
            value: weather
        filters: []
        facets: false
        page:
          max: 20
          offset: 20
      summary: Next Page request
