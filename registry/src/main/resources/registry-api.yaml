openapi: 3.0.0
servers:
  - url: 'https://virtserver.swaggerhub.com/StrayCat1/Inventory-Manager/1.0.0'
info:
  description: Inventory Manager API
  version: "1.0.0-oas3"
  title: Inventory Manager Registry API
  contact:
    email: cedar.cires@colorado.edu
  license:
    name: GNU GPL
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /registry/{type}:
    parameters:
      - $ref: '#/components/parameters/metadataType'
    post:
      summary: Create a metadata record from an unspecified source
      operationId: createRecord
      requestBody:
        $ref: "#/components/requestBodies/postBody"
      responses:
        '201':
          $ref: "#/components/responses/createItem"
        default:
          $ref: "#/components/responses/error"

  /registry/{type}/{id}:
    parameters:
      - $ref: '#/components/parameters/metadataType'
      - $ref: '#/components/parameters/metadataUUID'
    post:
      summary: Create a metadata record from an unspecified source with an existing UUID
      operationId: createRecordWithUUID
      requestBody:
        $ref: "#/components/requestBodies/postBody"
      responses:
        '201':
          $ref: "#/components/responses/createItem"
        default:
          $ref: "#/components/responses/error"

    get:
      summary: Retrieve a metadata record by id
      operationId: showRecordByUUID
      responses:
        '200':
          $ref: "#/components/responses/getItemById"
        '404':
          $ref: "#/components/responses/notFound"
        default:
          $ref: "#/components/responses/error"

  /registry/{type}/{source}:
    parameters:
      - $ref: '#/components/parameters/metadataType'
      - $ref: '#/components/parameters/metadataSource'
    post:
      summary: Create a metadata record from specified source
      operationId: createRecordFromSource
      requestBody:
        $ref: "#/components/requestBodies/postBody"
      responses:
        '201':
          $ref: "#/components/responses/createItem"
        default:
          $ref: "#/components/responses/error"

  /registry/{type}/{source}/{id}:
    parameters:
      - $ref: '#/components/parameters/metadataType'
      - $ref: '#/components/parameters/metadataSource'
      - $ref: '#/components/parameters/metadataUUID'
    post:
      summary: Create a metadata record with provided id
      operationId: createRecordFromSourceWithUUID
      requestBody:
        $ref: "#/components/requestBodies/postBody"
      responses:
        '201':
          $ref: "#/components/responses/createItem"
        default:
          $ref: "#/components/responses/error"
    get:
      summary: Retrieve a metadata record from source by id
      operationId: showRecordFromSourceByUUID
      responses:
        '200':
          $ref: "#/components/responses/getItemById"
        '404':
          $ref: "#/components/responses/notFound"
        default:
          $ref: "#/components/responses/error"

components:
  parameters:
    metadataType:
      name: type
      in: path
      required: true
      description: The type of metadata record to retreive (i.e. granule or collection).
      schema:
        type: string
        enum:
          - granule
          - collection
    metadataSource:
      name: source
      in: path
      required: true
      description: The source that generated this metadata record
      schema:
        type: string
        enum:
          - class
          - comet
          - common-ingest
    metadataUUID:
      name: id
      in: path
      required: true
      description: The UUID associated with this record
      schema:
        type: string
  responses:
    createItem:
      description: Response contains metadata record
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InventoryItem"
    error:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    getItemById:
      description: Contains the
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InventoryItem"
    notFound:
      description: Record not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  requestBodies:
    postBody:
      description: Either an ISO 19115 XML document or json
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/defaultJsonPostBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/isoXmlDocument'

  schemas:
    source:
      type: string
      enum:
        - granule
        - collection
    id:
      type: string
      format: uuid
      example: d290f1ee-6c54-4b01-90e6-d701748f0851
    Error:
      type: object
    InventoryItem:
      type: object
      required:
        - id
        - type
        - attributes
      properties:
        id:
          $ref: '#/components/schemas/id'
        type:
          $ref: '#/components/schemas/source'
        attributes:
          $ref: '#/components/schemas/Attributes'
    Attributes:
      type: object
      required:
        - identifiers
      properties:
        identifiers:
          $ref: '#/components/schemas/Identifiers'
        discovery:
          $ref: '#/components/schemas/Discovery'
        analysis:
          $ref: '#/components/schemas/Analysis'
        input:
          $ref: '#/components/schemas/Input'
    Identifiers:
      type: object
    Discovery:
      type: object
      properties:
        fileIdentifier:
          type: string
        parentIdentifier:
          type: string
        hierarchyLevelName:
          type: string
        doi:
          type: string
        purpose:
          type: string
        status:
          type: string
        credit:
          type: string
        title:
          type: string
        alternateTitle:
          type: string
        description:
          type: string
        keywords:
          type: array
          items:
            "$ref": "#/components/schemas/keywordsElement"
        accessionValues:
          type: array
          items:
            type: string
        topicCategories:
          type: array
          items:
            type: string
        gcmdScienceServices:
          type: array
          items:
            type: string
        gcmdScience:
          type: array
          items:
            type: string
        gcmdLocations:
          type: array
          items:
            type: string
        gcmdInstruments:
          type: array
          items:
            type: string
        gcmdPlatforms:
          type: array
          items:
            type: string
        gcmdProjects:
          type: array
          items:
            type: string
        gcmdDataCenters:
          type: array
          items:
            type: string
        gcmdHorizontalResolution:
          type: array
          items:
            type: string
        gcmdVerticalResolution:
          type: array
          items:
            type: string
        gcmdTemporalResolution:
          type: array
          items:
            type: string
        temporalBounding:
          type: object
          properties:
            beginDate:
              type: string
            beginIndeterminate:
              type: string
            beginYear:
              type: integer
            endDate:
              type: string
            endIndeterminate:
              type: string
            endYear:
              type: integer
            instant:
              type: string
            instantIndeterminate:
              type: string
            description:
              type: string
            invalidDates:
              type: object
              properties:
                begin:
                  type: boolean
                end:
                  type: boolean
                instant:
                  type: boolean
              required:
              - begin
              - end
              - instant
              additionalProperties: false
          required:
          - beginDate
          - beginIndeterminate
          - beginYear
          - endDate
          - endIndeterminate
          - endYear
          - instant
          - instantIndeterminate
          - description
          additionalProperties: false
        spatialBounding:
          "$ref": "#/components/schemas/Geometry"
        isGlobal:
          type: boolean
        acquisitionInstruments:
          type: array
          items:
            "$ref": "#/components/schemas/instrument"
        acquisitionOperations:
          type: array
          items:
            "$ref": "#/components/schemas/operation"
        acquisitionPlatforms:
          type: array
          items:
            "$ref": "#/components/schemas/platform"
        dataFormats:
          type: array
          items:
            "$ref": "#/components/schemas/dataFormat"
        links:
          type: array
          items:
            "$ref": "#/components/schemas/link"
        contacts:
          type: array
          items:
            "$ref": "#/components/schemas/responsibleParty"
        creators:
          type: array
          items:
            "$ref": "#/components/schemas/responsibleParty"
        publishers:
          type: array
          items:
            "$ref": "#/components/schemas/responsibleParty"
        thumbnail:
          type: string
        thumbnailDescription:
          type: string
        creationDate:
          type: string
        revisionDate:
          type: string
        publicationDate:
          type: string
        citeAsStatements:
          type: array
          items:
            type: string
        crossReferences:
          type: array
          items:
            "$ref": "#/components/schemas/reference"
        largerWorks:
          type: array
          items:
            "$ref": "#/components/schemas/reference"
        useLimitation:
          type: string
        legalConstraints:
          type: array
          items:
            type: string
        accessFeeStatement:
          type: string
        orderingInstructions:
          type: string
        edition:
          type: string
        dsmmAccessibility:
          type: integer
        dsmmDataIntegrity:
          type: integer
        dsmmDataQualityAssessment:
          type: integer
        dsmmDataQualityAssurance:
          type: integer
        dsmmDataQualityControlMonitoring:
          type: integer
        dsmmPreservability:
          type: integer
        dsmmProductionSustainability:
          type: integer
        dsmmTransparencyTraceability:
          type: integer
        dsmmUsability:
          type: integer
        dsmmAverage:
          description: Calculated mean average of individual DSMM scores for Accessibility,
            Data Integrity, Data Quality Assessment, Data Quality Assurance, Data Quality
            Control Monitoring, Preservability, Production Sustainability, Transparency
            Traceability, and Usability.
          type: number
        updateFrequency:
          type: string
        presentationForm:
          type: string
        services:
          description: Base64 encoded SV_ServiceIdentification sections, if any, of ISO
            XML metadata document. Null if not present.
          type: string
      additionalProperties: false
    Analysis:
      type: object
      properties:
        identification:
          description: Assessment of the identifying elements of the metadata.
          type: object
          properties:
            fileIdentifier:
              type: object
              properties:
                exists:
                  type: boolean
              required:
              - exists
              additionalProperties: false
            doi:
              type: object
              properties:
                exists:
                  type: boolean
              required:
              - exists
              additionalProperties: false
            parentIdentifier:
              type: object
              properties:
                exists:
                  type: boolean
              required:
              - exists
              additionalProperties: false
            hierarchyLevelName:
              type: object
              properties:
                exists:
                  type: boolean
                matchesIdentifiers:
                  description: Resolves to true if 'granule' specified as hierarchy level
                    and both fileId & parentId provided OR if no hierarchy level specified.
                  type: boolean
              required:
              - exists
              - matchesIdentifiers
              additionalProperties: false
          additionalProperties: false
        temporalBounding:
          description: Assessment of the temporal bounding in the metadata.
          type: object
          properties:
            beginDate:
              type: object
              properties:
                exists:
                  type: boolean
                valid:
                  type: boolean
              required:
              - exists
              - valid
              additionalProperties: false
            endDate:
              type: object
              properties:
                exists:
                  type: boolean
                valid:
                  type: boolean
              required:
              - exists
              - valid
              additionalProperties: false
            instant:
              type: object
              properties:
                exists:
                  type: boolean
                valid:
                  type: boolean
              required:
              - exists
              - valid
              additionalProperties: false
          required:
          - beginDate
          - endDate
          - instant
          additionalProperties: false
        spatialBounding:
          description: Assessment of the spatial bounding in the metadata.
          type: object
          properties:
            exists:
              type: boolean
          required:
          - exists
          additionalProperties: false
        titles:
          description: Assessment of the titles in the metadata.
          type: object
          properties:
            title:
              type: object
              properties:
                exists:
                  type: boolean
                characters:
                  type: integer
              required:
              - exists
              - characters
              additionalProperties: false
            alternateTitle:
              type: object
              properties:
                exists:
                  type: boolean
                characters:
                  type: integer
              required:
              - exists
              - characters
              additionalProperties: false
          required:
          - title
          - alternateTitle
          additionalProperties: false
        description:
          description: Assessment of the description in the metadata.
          type: object
          properties:
            exists:
              type: boolean
            characters:
              type: integer
          required:
          - exists
          - characters
          additionalProperties: false
        thumbnail:
          description: Assessment of the thumbnail information in the metadata.
          type: object
          properties:
            exists:
              type: boolean
          required:
          - exists
          additionalProperties: false
        dataAccess:
          description: Assessment of the data access elements in the metadata.
          type: object
          properties:
            exists:
              type: boolean
          required:
          - exists
          additionalProperties: false
      additionalProperties: false
    Input:
      type: object
      properties:
        content:
          type: string
        contentType:
          enum:
          - application/xml
          - application/json
        host:
          type: string
          format: ipv4
        id:
          $ref: '#/components/schemas/id'
        method:
          enum:
          - POST
          - PUT
        protocol:
          type: string
        requestUrl:
          type: string
          format: uri
        source:
          enum:
          - class
          - comet
          - common-ingest
      required:
      - content
      - contentType
      - host
      - id
      - method
      - protocol
      - requestUrl
      - source
      additionalProperties: false
    dataFormat:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
      required:
      - name
      - version
      additionalProperties: false
    keywordsElement:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
        type:
          type: string
        namespace:
          type: string
      required:
      - values
      - type
      - namespace
      additionalProperties: false
    instrument:
      type: object
      properties:
        instrumentIdentifier:
          type: string
        instrumentType:
          type: string
        instrumentDescription:
          type: string
      required:
      - instrumentIdentifier
      - instrumentType
      - instrumentDescription
      additionalProperties: false
    link:
      type: object
      properties:
        linkName:
          type: string
        linkProtocol:
          type: string
        linkUrl:
          type: string
        linkDescription:
          type: string
        linkFunction:
          type: string
      required:
      - linkName
      - linkProtocol
      - linkUrl
      - linkDescription
      - linkFunction
      additionalProperties: false
    operation:
      type: object
      properties:
        operationDescription:
          type: string
        operationIdentifier:
          type: string
        operationStatus:
          type: string
        operationType:
          type: string
      required:
      - operationDescription
      - operationIdentifier
      - operationStatus
      - operationType
      additionalProperties: false
    platform:
      type: object
      properties:
        platformIdentifier:
          type: string
        platformDescription:
          type: string
        platformSponsor:
          type: array
          items:
            type: string
      required:
      - platformIdentifier
      - platformDescription
      - platformSponsor
      additionalProperties: false
    reference:
      type: object
      properties:
        title:
          type: string
        date:
          type: string
        links:
          type: array
          items:
            "$ref": "#/components/schemas/link"
      required:
      - title
      - date
      - links
      additionalProperties: false
    responsibleParty:
      type: object
      properties:
        individualName:
          type: string
        organizationName:
          type: string
        positionName:
          type: string
        role:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
      - individualName
      - organizationName
      - positionName
      - role
      - email
      - phone
      additionalProperties: false
    Geometry:
      description: One geometry as defined by GeoJSON
      oneOf:
      - "$ref": "#/components/schemas/Point"
      - "$ref": "#/components/schemas/MultiPoint"
      - "$ref": "#/components/schemas/LineString"
      - "$ref": "#/components/schemas/MultiLineString"
      - "$ref": "#/components/schemas/Polygon"
      - "$ref": "#/components/schemas/MultiPolygon"
    Point:
      type: object
      properties:
        type:
          enum:
          - Point
        coordinates:
          "$ref": "#/components/schemas/position"
      required:
      - type
      - coordinates
    MultiPoint:
      properties:
        type:
          enum:
          - MultiPoint
        coordinates:
          "$ref": "#/components/schemas/positionArray"
      required:
      - type
      - coordinates
    LineString:
      properties:
        type:
          enum:
          - LineString
        coordinates:
          "$ref": "#/components/schemas/lineString"
      required:
      - type
      - coordinates
    MultiLineString:
      properties:
        type:
          enum:
          - MultiLineString
        coordinates:
          type: array
          items:
            "$ref": "#/components/schemas/lineString"
      required:
      - type
      - coordinates
    Polygon:
      properties:
        type:
          enum:
          - Polygon
        coordinates:
          "$ref": "#/components/schemas/polygon"
      required:
      - type
      - coordinates
    MultiPolygon:
      properties:
        type:
          enum:
          - MultiPolygon
        coordinates:
          type: array
          items:
            "$ref": "#/components/schemas/polygon"
      required:
      - type
      - coordinates
    position:
      description: A single position
      type: array
      minItems: 2
      maxItems: 2
      items:
        anyOf:
        - $ref: '#/components/schemas/latPos'
        - $ref: '#/components/schemas/longPos'
    longPos:
      type: number
      minimum: -360
      maximum: 360
    latPos:
      type: number
      minimum: -90
      maximum: 90
    positionArray:
      description: An array of positions
      type: array
      items:
        "$ref": "#/components/schemas/position"
    lineString:
      description: An array of two or more positions
      allOf:
      - "$ref": "#/components/schemas/positionArray"
      - minItems: 2
    linearRing:
      description: An array of four positions where the first equals the last
      allOf:
      - "$ref": "#/components/schemas/positionArray"
      - minItems: 4
    polygon:
      description: An array of linear rings
      type: array
      items:
        "$ref": "#/components/schemas/linearRing"
    isoXmlDocument:
      type: object
    defaultJsonPostBody:
      type: object
