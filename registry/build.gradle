apply plugin: 'war'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot' // version declared in top-level buildscript

repositories {
  mavenCentral()
}

configurations {
  compile.exclude module: 'tomcat-annotations-api', group: 'org.apache.tomcat'
}

dependencies {
  compile "org.codehaus.groovy:groovy:${project.groovyVersion}"
  compile "org.codehaus.groovy:groovy-json:${project.groovyVersion}"
  compile "org.codehaus.groovy:groovy-xml:${project.groovyVersion}"
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.boot:spring-boot-starter-actuator'
  compile 'org.springframework.boot:spring-boot-devtools'
  compile 'org.springframework.cloud:spring-cloud-context:1.1.7.RELEASE'
  compile 'org.apache.kafka:kafka-streams:1.0.0'

  runtime 'org.springframework.boot:spring-boot-devtools'

  providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

  testCompile "org.spockframework:spock-spring:${project.spockVersion}"
  testCompile "org.spockframework:spock-core:${project.spockVersion}"
  testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'org.testcontainers:testcontainers:1.4.2'
}

ext {
  fatWarPath = file("${buildDir}/libs/${rootProject.name}-${project.name}-all-${project.version}.war")
}

springBoot {
  backupSource = false
}

bootRepackage {
  outputFile = fatWarPath
  excludeDevtools = true
  executable = true
  onlyIf { !tasks.getByName('war').state.upToDate }
}
