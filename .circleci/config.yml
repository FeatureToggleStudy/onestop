# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

defaults: &defaults
  docker:
    - image: circleci/openjdk:11-jdk
  working_directory: ~/repo

defaultsWithElasticsearch: &defaultsWithElasticsearch
  docker:
    - image: circleci/openjdk:11-jdk # primary container to issue gradle commands from
    - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.2
      environment:
        - cluster.name: elasticsearch-test
        - xpack.security.enabled: false
        - transport.host: localhost
        - network.host: 127.0.0.1
        - http.port: 9200
        - discovery.type: single-node
        - ES_JAVA_OPTS: "-Xms160m -Xmx320m" # Customize the JVM maximum heap limit (will crash container if too high on Circle)
  working_directory: ~/repo

defaultsMachine: &defaultsMachine
  machine:
    docker_layer_caching: true
  working_directory: ~/repo

env: &env
  environment:
    # Customize the JVM maximum heap limit
    JVM_OPTS: -Xmx3200m

restoreCache: &restoreCache
  # Download and cache dependencies
  restore_cache:
      keys:
      - onestop-cache-v11-{{ checksum "build.gradle" }}
      # fallback to using the latest cache if no exact match is found
      - onestop-cache-v11-

saveCache: &saveCache
  save_cache:
      paths:
        - ~/.gradle/caches/
        - ~/.gradle/wrapper/
        - .gradle
        - client/.gradle
        - client/node_modules
        - client/build
        - admin/build
        - search/build
      key: onestop-cache-v11-{{ checksum "build.gradle" }}

attachWorkspace: &attachWorkspace
  - attach_workspace:
      at: ~/repo

version: 2
jobs:
  checkout:
    <<: *restoreCache
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Setup Gradle
          command: ./gradlew help
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  search-build:
    <<: *defaults

    steps:
      - <<: *attachWorkspace

      - run:
          name: Build Search API
          command: ./gradlew search:assemble

      - persist_to_workspace:
          root: ~/repo
          paths:
            - .gradle
            - search/build

  client-build:
    <<: *defaults
    steps:
      - <<: *attachWorkspace

      - run:
          name: Build Client
          command: ./gradlew client:assemble

      - persist_to_workspace:
          root: ~/repo
          paths:
            - .gradle
            - client/build
            - client/node_modules

  admin-build:
    <<: *defaults
    steps:
      - <<: *attachWorkspace

      - run:
          name: Build Admin API
          command: ./gradlew admin:assemble

      - persist_to_workspace:
          root: ~/repo
          paths:
            - .gradle
            - admin/build

  admin-test:
    <<: *defaults
    steps:
      - <<: *attachWorkspace

      - run:
          name: Admin API Unit Tests
          command: ./gradlew admin:test

      - persist_to_workspace:
          root: ~/repo
          paths:
            - .gradle
            - admin/build/jacoco/test.exec
            - admin/build/test-results/test
            - admin/build/reports/test

  search-test:
    <<: *defaults
    steps:
      - <<: *attachWorkspace

      - run:
          name: Generate Dummy Keystore
          command: ./gradlew jks

      - run:
          name: Search API Unit Tests
          command: ./gradlew search:test

      - persist_to_workspace:
          root: ~/repo
          paths:
            - .gradle
            - search/build/jacoco/test.exec
            - search/build/test-results/test
            - search/build/reports/test

  client-test:
    <<: *defaults
    steps:
      - <<: *attachWorkspace

      - run:
          name: Client Unit Tests
          command: ./gradlew client:test

      - persist_to_workspace:
          root: ~/repo
          paths:
            - client/build

  admin-integration-test:
    <<: *defaultsWithElasticsearch
    <<: *env
    steps:
      - <<: *attachWorkspace

      - run:
          name: Wait for Elasticsearch
          command: dockerize -wait tcp://localhost:9200 -timeout 1m

      - run:
          name: Admin API Integration Tests
          command: ./gradlew admin:integrationTest

      - persist_to_workspace:
          root: ~/repo
          paths:
            - .gradle
            - admin/build/jacoco/integrationTest.exec
            - admin/build/test-results/integrationTest
            - admin/build/reports/integrationTest

  search-integration-test:
    <<: *defaultsWithElasticsearch
    <<: *env
    steps:
      - <<: *attachWorkspace

      - run:
          name: Wait for Elasticsearch
          command: dockerize -wait tcp://localhost:9200 -timeout 1m

      - run:
          name: Search Integration Tests
          command: ./gradlew search:integrationTest

      - persist_to_workspace:
          root: ~/repo
          paths:
            - .gradle
            - search/build/jacoco/integrationTest.exec
            - search/build/test-results/integrationTest
            - search/build/reports/integrationTest

  e2e:
    <<: *defaultsMachine
    <<: *env
    steps:
      - <<: *attachWorkspace
      - run:
          name: apt-get update
          command:  sudo apt-get update
      - run:
          name: install java 11
          command: sudo apt install openjdk-11-jdk
      - run:
          name: list java versions
          command: sudo update-alternatives --list java
      - run:
          name: list javac versions
          command: sudo update-alternatives --list javac
      - run:
          name: set java version
          command: sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
      - run:
          name: set javac version
          command: sudo update-alternatives --set javac /usr/lib/jvm/java-11-openjdk-amd64/bin/javac
      - run:
          name: set JAVA_HOME
          command: export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - run:
          name: inspect java version
          command: java -version
      - run:
          name: inspect JAVA_HOME
          command: echo "JAVA_HOME = $JAVA_HOME"
      - run:
          name: E2E tests
          command: ./gradlew e2e-tests:test

      - <<: *saveCache

      - persist_to_workspace:
          root: ~/repo
          paths:
            - .gradle
            - e2e-tests/build

  admin-publish:
    <<: *defaults

    steps:
      - <<: *attachWorkspace

      - deploy:
          name: Build/Publish Admin Image(s)
          command: ./gradlew admin:jib

  search-publish:
    <<: *defaults

    steps:
      - <<: *attachWorkspace

      - deploy:
          name: Build/Publish Search API Image(s)
          command: ./gradlew search:jib

  client-publish:
    <<: *defaults

    steps:
      - <<: *attachWorkspace

      - deploy:
          name: Build/Publish Client Image(s)
          command: ./gradlew client:jib

  client-checks:
    <<: *defaults

    steps:
      - <<: *attachWorkspace

      - run:
          name: Client Check Formatting
          command: ./gradlew client:formatCheck

      - run:
          name: Client RetireJS
          command: ./gradlew client:retire

  report-tests:
    <<: *defaults

    steps:
      - <<: *attachWorkspace

      - run:
          name: Test Reports
          command: ./gradlew jacocoTestReport -x test

      - run:
          name: Save test results
          command: |
            mkdir -p ~/tests/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find . -type f -regex ".*/build/integration-test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find . -type f -regex ".*/build/coverage/junit/.*xml" -exec cp {} ~/tests/junit/ \;
          when: always

      - run:
          name: Save coverage results
          command: |
            mkdir -p ~/tests/coverage/
            find . -type d -regex ".*/build/reports/jacoco/" -exec cp -r {} ~/tests/coverage/ \;
            find . -type d -regex ".*/build/coverage/lcov-report/" -exec cp -r {} ~/tests/coverage/ \;
          when: always

      - run:
          name: Post coverage results to codecov
          command: |
            bash <(curl -s https://codecov.io/bash)

      - store_test_results:
          path: ~/tests

      - store_artifacts:
          path: ~/tests

  check-owasp-cve:
    <<: *defaults

    steps:
      - <<: *attachWorkspace

      - run:
          name: Run OWASP Check
          command: ./gradlew dependencyCheckAnalyze
          no_output_timeout: 30m

      - run:
          name: Save coverage results
          command: |
            mkdir -p ~/owasp/admin/
            find . -type d -regex "admin/build/reports/dependency-check-report.html" -exec cp -r {} ~/tests/admin/ \;
            mkdir -p ~/owasp/search/
            find . -type d -regex "search/build/reports/dependency-check-report.html" -exec cp -r {} ~/tests/search/ \;
          when: always

      - store_test_results:
          path: ~/owasp

      - store_artifacts:
          path: ~/owasp

workflows:
  version: 2
  build:
    jobs:
      - checkout
      - admin-build:
          requires:
            - checkout
      - admin-test:
          requires:
            - admin-build
      - admin-integration-test:
          requires:
            - admin-build
      - admin-publish:
          filters:  # using regex filters requires the entire branch to match
            branches:
              only:  # only branches matching the below regex filters will run
                - master
                - /release.*/
          requires:
            - admin-test
            - admin-integration-test
      # - search-build:
      #     requires:
      #       - checkout
      # - search-test:
      #     requires:
      #       - search-build
      # - search-integration-test:
      #     requires:
      #       - search-build
      # - search-publish:
      #     filters:  # using regex filters requires the entire branch to match
      #       branches:
      #         only:  # only branches matching the below regex filters will run
      #           - master
      #           - /release.*/
      #     requires:
      #       - search-test
      #       - search-integration-test
      # - client-build:
      #     requires:
      #       - checkout
      # - client-test:
      #     requires:
      #       - client-build
      # - client-publish:
      #     filters:  # using regex filters requires the entire branch to match
      #       branches:
      #         only:  # only branches matching the below regex filters will run
      #           - master
      #           - /release.*/
      #     requires:
      #       - client-test
      # - client-checks:
      #     requires:
      #       - client-build
      #
      # - e2e:
      #     requires:
      #       - client-build
      #       - admin-build
      #       - search-build
      #       - search-integration-test
      #       - admin-integration-test
      #
      # - report-tests:
      #     requires:
      #       - admin-test
      #       - admin-integration-test
      #       - search-test
      #       - search-integration-test
      #       - client-test

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - checkout
      - client-build:
          requires:
            - checkout
      - meta-build:
          requires:
            - checkout
      - search-build:
          requires:
            - checkout
      - check-owasp-cve:
          requires:
            - checkout
      - e2e:
          requires:
            - client-build
            - meta-build
            - search-build
