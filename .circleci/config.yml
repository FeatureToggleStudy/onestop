# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    machine: true
    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - onestop-cache-v3-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - onestop-cache-v3-

      # Virtual Memory for Elasticsearch:
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
      - run:
          name: Increase Virtual Memory Limits for Elasticsearch
          command: sudo sysctl -w vm.max_map_count=262144

      # build it!
      - run:
          name: Build
          command: ./gradlew build
          no_output_timeout: 30m

      - run:
          name: Save test results
          command: |
            mkdir -p ~/tests/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find . -type f -regex ".*/build/integration-test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find . -type f -regex ".*/build/coverage/junit/.*xml" -exec cp {} ~/tests/junit/ \;
          when: always

      - run:
          name: Save coverage results
          command: |
            mkdir -p ~/tests/coverage/
            find . -type d -regex ".*/build/reports/jacoco/" -exec cp -r {} ~/tests/coverage/ \;
            find . -type d -regex ".*/build/coverage/lcov-report/" -exec cp -r {} ~/tests/coverage/ \;
          when: always

      - run:
          name: Post coverage results to codecov
          command: |
            bash <(curl -s https://codecov.io/bash)

      - store_test_results:
          path: ~/tests

      - store_artifacts:
          path: ~/tests

      - save_cache:
          paths:
            - ~/.gradle/caches/
            - ~/.gradle/wrapper/
            - .gradle
            - api-search/build
            - api-search/dist
            - api-metadata/build
            - api-metadata/dist
            - buildSrc/.gradle
            - buildSrc/build
            - client/.gradle
            - client/node_modules
            - client/build
          key: onestop-cache-v3-{{ checksum "build.gradle" }}

      - deploy:
          name: Publish
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "release/*" ]; then
              ./gradlew publish -x BuildDockerImage
            fi
