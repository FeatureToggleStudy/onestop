# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

defaults: &defaults
  docker:
    - image: circleci/openjdk:11-jdk
  environment:
    - GRADLE_USER_HOME: ~/repo/.gradle_home
  working_directory: ~/repo

defaultsWithElasticsearch: &defaultsWithElasticsearch
  environment:
    - GRADLE_USER_HOME: ~/repo/.gradle_home
  docker:
    - image: circleci/openjdk:11-jdk # primary container to issue gradle commands from
    - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.2
      environment:
        - cluster.name: elasticsearch-test
        - xpack.security.enabled: false
        - transport.host: localhost
        - network.host: 127.0.0.1
        - http.port: 9200
        - discovery.type: single-node
        - ES_JAVA_OPTS: "-Xms160m -Xmx320m" # Customize the JVM maximum heap limit (will crash container if too high on Circle)
  working_directory: ~/repo

defaultsMachine: &defaultsMachine
  machine:
    docker_layer_caching: true
  working_directory: ~/repo

env: &env
  environment:
    # Customize the JVM maximum heap limit
    JVM_OPTS: -Xmx3200m

restoreCache: &restoreCache
  # Download and cache dependencies
  restore_cache:
    keys:
      - onestop-cache-v12-{{ checksum "build.gradle" }}-{{ checksum "admin/build.gradle" }}-{{ checksum "client/build.gradle" }}-{{ checksum "client/package.json" }}-{{ checksum "search/build.gradle" }}
      # fallback to using the latest cache if no exact match is found
      - onestop-cache-v12-

saveCache: &saveCache
  save_cache:
    paths:
      - .gradle_home
      - .gradle
      - build
      - admin/build
      - client/build
      - client/.gradle
      - client/node_modules
      - search/build
      - cli/.gogradle
    key: onestop-cache-v12-{{ checksum "build.gradle" }}-{{ checksum "admin/build.gradle" }}-{{ checksum "client/build.gradle" }}-{{ checksum "client/package.json" }}-{{ checksum "search/build.gradle" }}

attachWorkspace: &attachWorkspace
  - attach_workspace:
      at: ~/repo

version: 2
jobs:
  checkout:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-

      - checkout

      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      - <<: *restoreCache

      - run:
          name: Build shared resources
          command: ./gradlew --parallel elastic-common:build --stacktrace

      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  admin:
    <<: *defaultsWithElasticsearch
    <<: *env

    steps:
      - <<: *attachWorkspace

      - run:
          name: Assemble, Check (sans integration tests)
          command: ./gradlew --parallel admin:assemble admin:check -x integrationTest

      - run:
          name: Wait for Elasticsearch
          command: dockerize -wait tcp://localhost:9200 -timeout 1m

      - run:
          name: Integration Tests
          command: ./gradlew admin:integrationTest

      - run:
          name: Test Reports
          command: ./gradlew jacocoTestReport -x test

      - run:
          name: Save test results
          command: |
            mkdir -p ~/tests/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find . -type f -regex ".*/build/integration-test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find . -type f -regex ".*/build/coverage/junit/.*xml" -exec cp {} ~/tests/junit/ \;
          when: always

      - store_test_results:
          path: ~/tests

      - store_artifacts:
          path: ~/tests

      - deploy:
          name: Publish Image(s)
          command: |
            echo "${CIRCLE_BRANCH}"
            if [[ "${CIRCLE_BRANCH}" == "master" ]] || [[ "${CIRCLE_BRANCH}" == release* ]]; then
              ./gradlew admin:jib
            else
              echo "Skipping publishing"
            fi

      - persist_to_workspace:
          root: ~/repo
          paths:
            - admin/build

  search:
    <<: *defaultsWithElasticsearch
    <<: *env

    steps:
      - <<: *attachWorkspace

      - run:
          name: Assemble, Check (sans integration tests)
          command: ./gradlew --parallel search:assemble search:check -x integrationTest

      - run:
          name: Wait for Elasticsearch
          command: dockerize -wait tcp://localhost:9200 -timeout 1m

      - run:
          name: Integration Tests
          command: ./gradlew search:integrationTest

      - run:
          name: Test Reports
          command: ./gradlew jacocoTestReport -x test

      - run:
          name: Save test results
          command: |
            mkdir -p ~/tests/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find . -type f -regex ".*/build/integration-test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find . -type f -regex ".*/build/coverage/junit/.*xml" -exec cp {} ~/tests/junit/ \;
          when: always

      - store_test_results:
          path: ~/tests

      - store_artifacts:
          path: ~/tests

      - deploy:
          name: Publish Image(s)
          command: |
            echo "${CIRCLE_BRANCH}"
            if [[ "${CIRCLE_BRANCH}" == "master" ]] || [[ "${CIRCLE_BRANCH}" == release* ]]; then
              ./gradlew search:jib
            else
              echo "Skipping publishing"
            fi

      - persist_to_workspace:
          root: ~/repo
          paths:
            - search/build

  client:
    <<: *defaults
    steps:
      - <<: *attachWorkspace

      - run:
          name: Assemble, Check
          command: ./gradlew --parallel client:assemble client:check

      - deploy:
          name: Publish Image(s)
          command: |
            echo "${CIRCLE_BRANCH}"
            if [[ "${CIRCLE_BRANCH}" == "master" ]] || [[ "${CIRCLE_BRANCH}" == release* ]]; then
              ./gradlew client:jib
            else
              echo "Skipping publishing"
            fi

      - persist_to_workspace:
          root: ~/repo
          paths:
            - client/build
            - client/node_modules
            -
  cli:
    <<: *defaults
    steps:
      - <<: *attachWorkspace
      - environment:
        GRADLE_USER_HOME: /home/circleci/repo/.gradle_home        
      - run:
          name: Build image, publish
          command: ./gradlew cli:build

      - deploy:
          name: Publish Image(s)
          command: |
            echo "${CIRCLE_BRANCH}"
            if [[ "${CIRCLE_BRANCH}" == "1020-OneStopCLI" ]] || [[ "${CIRCLE_BRANCH}" == release* ]]; then
              ./gradlew client:jib
            else
              echo "Skipping publishing"
            fi

  finalize:
    <<: *defaults

    steps:
      - <<: *attachWorkspace

      - run:
          name: Save coverage results
          command: |
            mkdir -p ~/tests/coverage/
            find . -type d -regex ".*/build/reports/jacoco/" -exec cp -r {} ~/tests/coverage/ \;
            find . -type d -regex ".*/build/coverage/lcov-report/" -exec cp -r {} ~/tests/coverage/ \;
          when: always

      - store_artifacts:
          path: ~/tests/coverage

      - run:
          name: Post coverage results to codecov
          command: |
            bash <(curl -s https://codecov.io/bash)

      - <<: *saveCache

  check-owasp-cve:
    <<: *defaults

    steps:
      - <<: *attachWorkspace

      - run:
          name: Run OWASP Check
          command: ./gradlew dependencyCheckAnalyze
          no_output_timeout: 30m

      - run:
          name: Save OWASP results
          command: |
            mkdir -p ~/owasp/admin/
            find . -type d -regex "admin/build/reports/dependency-check-report.html" -exec cp -r {} ~/owasp/admin/ \;
            mkdir -p ~/owasp/search/
            find . -type d -regex "search/build/reports/dependency-check-report.html" -exec cp -r {} ~/owasp/search/ \;
          when: always

      - store_artifacts:
          path: ~/owasp

  e2e:
    <<: *defaultsMachine
    <<: *env
    steps:
      - <<: *attachWorkspace
      - run:
          name: apt-get update
          command:  sudo apt-get update
      - run:
          name: install java 11
          command: sudo apt install openjdk-11-jdk
      - run:
          name: list java versions
          command: sudo update-alternatives --list java
      - run:
          name: list javac versions
          command: sudo update-alternatives --list javac
      - run:
          name: set java version
          command: sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
      - run:
          name: set javac version
          command: sudo update-alternatives --set javac /usr/lib/jvm/java-11-openjdk-amd64/bin/javac
      - run:
          name: set JAVA_HOME
          command: export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - run:
          name: inspect java version
          command: java -version
      - run:
          name: inspect JAVA_HOME
          command: echo "JAVA_HOME = $JAVA_HOME"
      - run:
          name: E2E tests
          command: ./gradlew e2e-tests:test

workflows:
  version: 2
  build:
    jobs:
      - checkout
      - admin:
          requires:
            - checkout
      - client:
          requires:
            - checkout
      - search:
          requires:
            - checkout
      - finalize:
          requires:
            - admin
            - client
            - search

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - checkout
      - check-owasp-cve:
          requires:
            - checkout
      - e2e:
          requires:
            - checkout
