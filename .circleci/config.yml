# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:

  check-owasp-cve:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify stream dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      # build it!
      - run:
          name: Run OWASP Check
          command: ./gradlew dependencyCheckAggregate
          no_output_timeout: 30m

  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify stream dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      # build it!
      - run:
          name: Build
          command: ./gradlew build -x dependencyCheckAggregate

      - run:
          name: Save test results
          command: |
            mkdir -p ~/tests/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tests/junit/ \;
            find . -type f -regex ".*/build/integration-test-results/.*xml" -exec cp {} ~/tests/junit/ \;
          when: always

      - run:
          name: Save jacoco results
          command: |
            mkdir -p ~/tests/jacoco/
            find . -type d -regex ".*/build/reports/jacoco/" -exec cp -r {} ~/tests/jacoco/ \;
          when: always

      - run:
          name: Post jacoco results to codecov
          command: |
            bash <(curl -s https://codecov.io/bash)

      - store_test_results:
          path: ~/tests

      - store_artifacts:
          path: ~/tests

      - save_cache:
          paths:
            - ~/.gradle
            - .gradle
            - common/build
            - registry/build
            - registry/node_modules
            - stream-manager/build
          key: v2-dependencies-{{ checksum "build.gradle" }}

      - deploy:
          name: Publish
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "release/*" ]; then
              ./gradlew publish -x BuildDockerImage
            fi

### configure via the ui
#notify:
#  webhooks:
#    # A list of hashes representing hooks. Only the url field is supported.
#    - url: https://hooks.slack.com/services/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

workflows:
  version: 2
  build:
    jobs:
      - build

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - checkout
      - check-owasp-cve:
          requires:
            - checkout
