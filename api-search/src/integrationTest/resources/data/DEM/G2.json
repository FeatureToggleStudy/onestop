{
  "fileIdentifier": "gov.noaa.ngdc.mgg.dem:4870",
  "parentIdentifier": "gov.noaa.ngdc.mgg.dem:4870",
  "internalParentIdentifier": "e5820283-3686-44d0-8edd-28a086eb500e",
  "hierarchyLevelName": null,
  "doi": null,
  "purpose": "Developed for the Mississippi State University Geosystems Research Institute and NOAA National Marine Fisheries Service to support scientific visualization efforts.",
  "status": "completed",
  "credit": null,
  "title": "Mariana Trench Bathymetric Digital Elevation Model",
  "alternateTitle": null,
  "description": "NOAA's National Geophysical Data Center (NGDC) created a bathymetric digital elevation model (DEM) for the Mariana Trench and adjacent seafloor in the Western Pacific Ocean.                    Bathymetric data used in DEM compilation were obtained from various sources, including internation, federal and academic partners. The DEM is referenced to the horizontal datum of                    World Geodetic System 1984 (WGS 84) and the vertical datum of sea level. Grid spacings for the Mariana Trench DEM is 6 arc-seconds (~180 meters). Please note that while positive                    elevations (elevations greater than 0 meters) are present in the DEM over 'dry' land (i.e. islands such as Guam and the Northern Mariana Islands), they should be ignored as the                    focus of DEM development was solely in the bathymetric realm.",
  "keywords": [
    {
      "values": [
        "Oceans > Bathymetry\/Seafloor Topography > Seafloor Topography",
        "Oceans > Bathymetry\/Seafloor Topography > Bathymetry",
        "Oceans > Bathymetry\/Seafloor Topography > Water Depth"
      ],
      "type": "theme",
      "namespace": "NASA\/GCMD Earth Science Keywords"
    },
    {
      "values": [
        "DEM > Digital Elevation Model"
      ],
      "type": "theme",
      "namespace": "NASA\/GCMD Platform Keywords"
    },
    {
      "values": [
        "ICSU-WDS > International Council for Science - World Data System"
      ],
      "type": "project",
      "namespace": "NASA\/GCMD Project Keywords"
    },
    {
      "values": [
        "H: 100 meters - < 250 meters",
        "V: 1 meter - < 10 meters"
      ],
      "type": "theme",
      "namespace": "NASA\/GCMD Data Resolution Keywords"
    },
    {
      "values": [
        "Bathymetric Digital Elevation Model",
        "Gridded elevations"
      ],
      "type": "theme",
      "namespace": "Uncontrolled"
    },
    {
      "values": [
        "Ocean > Pacific Ocean > Western Pacific Ocean",
        "Ocean > Pacific Ocean > Western Pacific Ocean > Guam",
        "Ocean > Pacific Ocean > Western Pacific Ocean > Micronesia > Northern Mariana Islands",
        "Vertical Location > Sea Floor"
      ],
      "type": "place",
      "namespace": "NASA\/GCMD Location Keywords"
    },
    {
      "values": [
        "Mariana Trench",
        "Pacific Ocean"
      ],
      "type": "place",
      "namespace": "Uncontrolled"
    },
    {
      "values": [
        "DOC\/NOAA\/NESDIS\/NCEI > National Centers for Environmental Information, NESDIS, NOAA, U.S. Department of Commerce",
        "DOC\/NOAA\/NESDIS\/NGDC > National Geophysical Data Center, NESDIS, NOAA, U.S. Department of Commerce"
      ],
      "type": "dataCenter",
      "namespace": "NASA\/GCMD Data Center Keywords"
    }
  ],
  "accessionValues": [

  ],
  "topicCategories": [
    "elevation"
  ],
  "gcmdScienceServices": [

  ],
  "gcmdScience": [
    "Oceans > Bathymetry\/Seafloor Topography > Seafloor Topography",
    "Oceans > Bathymetry\/Seafloor Topography",
    "Oceans",
    "Oceans > Bathymetry\/Seafloor Topography > Bathymetry",
    "Oceans > Bathymetry\/Seafloor Topography > Water Depth"
  ],
  "gcmdLocations": [
    "Ocean > Pacific Ocean > Western Pacific Ocean",
    "Ocean > Pacific Ocean",
    "Ocean",
    "Ocean > Pacific Ocean > Western Pacific Ocean > Guam",
    "Ocean > Pacific Ocean > Western Pacific Ocean > Micronesia > Northern Mariana Islands",
    "Ocean > Pacific Ocean > Western Pacific Ocean > Micronesia",
    "Vertical Location > Sea Floor",
    "Vertical Location"
  ],
  "gcmdInstruments": [

  ],
  "gcmdPlatforms": [
    "DEM > Digital Elevation Model"
  ],
  "gcmdProjects": [
    "ICSU-WDS > International Council for Science - World Data System"
  ],
  "gcmdDataCenters": [
    "DOC\/NOAA\/NESDIS\/NCEI > National Centers for Environmental Information, NESDIS, NOAA, U.S. Department of Commerce",
    "DOC\/NOAA\/NESDIS\/NGDC > National Geophysical Data Center, NESDIS, NOAA, U.S. Department of Commerce"
  ],
  "gcmdHorizontalResolution": [

  ],
  "gcmdVerticalResolution": [

  ],
  "gcmdTemporalResolution": [

  ],
  "temporalBounding": {
    "beginDate": "1985-01-01",
    "beginIndeterminate": null,
    "endDate": "2011-12-31",
    "endIndeterminate": null,
    "instant": null,
    "instantIndeterminate": null
  },
  "spatialBounding": {
    "type": "Polygon",
    "coordinates": [
      [
        [
          139,
          10
        ],
        [
          150,
          10
        ],
        [
          150,
          22
        ],
        [
          139,
          22
        ],
        [
          139,
          10
        ]
      ]
    ]
  },
  "isGlobal": false,
  "acquisitionInstruments": [
    {
      "instrumentIdentifier": null,
      "instrumentType": "Multibeam Swath Bathymetry System",
      "instrumentDescription": null
    },
    {
      "instrumentIdentifier": null,
      "instrumentType": "Sound Navigation and Ranging",
      "instrumentDescription": null
    }
  ],
  "acquisitionOperations": [

  ],
  "acquisitionPlatforms": [
    {
      "platformIdentifier": "Digital Elevation Model",
      "platformDescription": null,
      "platformSponsor": [

      ]
    }
  ],
  "dataFormats": [
    {
      "name": "ESRI ARC ASCII",
      "version": "1"
    }
  ],
  "links": [
    {
      "linkName": "Mariana Trench Bathymetric Digital Elevation Model ASCII DEM",
      "linkProtocol": null,
      "linkUrl": "http:\/\/www.ngdc.noaa.gov\/dem\/squareCellGrid\/getArchive\/4870?gridFormat=ESRI+Arc+ASCII",
      "linkDescription": "Download DEM, metadata and readme file.",
      "linkFunction": "download"
    },
    {
      "linkName": "Mariana Trench Bathymetric Digital Elevation Model Homepage",
      "linkProtocol": null,
      "linkUrl": "http:\/\/www.ngdc.noaa.gov\/dem\/squareCellGrid\/download\/4870",
      "linkDescription": "Information, preview and access DEM, metadata record and development report.",
      "linkFunction": "information"
    },
    {
      "linkName": "DEM text search tool",
      "linkProtocol": null,
      "linkUrl": "http:\/\/www.ngdc.noaa.gov\/dem\/squareCellGrid\/search",
      "linkDescription": "Text search tool for locating completed and planned DEMs.",
      "linkFunction": "search"
    },
    {
      "linkName": "Map Interface",
      "linkProtocol": null,
      "linkUrl": "http:\/\/www.ngdc.noaa.gov\/dem\/squareCellGrid\/map",
      "linkDescription": "Graphic geo-spatial search tool for locating completed and planned DEMs.",
      "linkFunction": "search"
    }
  ],
  "contacts": [
    {
      "individualName": null,
      "organizationName": "DOC\/NOAA\/NESDIS\/NCEI > National Centers for Environmental Information, NESDIS, NOAA, U.S. Department of Commerce",
      "positionName": "DEM Information",
      "role": "pointOfContact",
      "email": "dem.info@noaa.gov",
      "phone": null
    }
  ],
  "creators": [
    {
      "individualName": null,
      "organizationName": "DOC\/NOAA\/NESDIS\/NGDC > National Geophysical Data Center, NESDIS, NOAA, U.S. Department of Commerce",
      "positionName": null,
      "role": "originator",
      "email": null,
      "phone": null
    },
    {
      "individualName": null,
      "organizationName": "Elliot Lim",
      "positionName": null,
      "role": "originator",
      "email": null,
      "phone": null
    },
    {
      "individualName": null,
      "organizationName": "Michael G. Sutherland",
      "positionName": null,
      "role": "originator",
      "email": null,
      "phone": null
    },
    {
      "individualName": null,
      "organizationName": "Dorothy Z. Friday",
      "positionName": null,
      "role": "originator",
      "email": null,
      "phone": null
    },
    {
      "individualName": null,
      "organizationName": "Barry W. Eakins",
      "positionName": null,
      "role": "originator",
      "email": null,
      "phone": null
    },
    {
      "individualName": null,
      "organizationName": "Susan J. McLean",
      "positionName": null,
      "role": "originator",
      "email": null,
      "phone": null
    }
  ],
  "publishers": [
    {
      "individualName": null,
      "organizationName": "DOC\/NOAA\/NESDIS\/NCEI > National Centers for Environmental Information, NESDIS, NOAA, U.S. Department of Commerce",
      "positionName": null,
      "role": "publisher",
      "email": null,
      "phone": null
    },
    {
      "individualName": null,
      "organizationName": "DOC\/NOAA\/NESDIS\/NGDC > National Geophysical Data Center, NESDIS, NOAA, U.S. Department of Commerce",
      "positionName": null,
      "role": "publisher",
      "email": null,
      "phone": null
    },
    {
      "individualName": null,
      "organizationName": "NASA",
      "positionName": "GCMD User Support Office",
      "role": "publisher",
      "email": "gcmduso@gcmd.gsfc.nasa.gov",
      "phone": null
    }
  ],
  "thumbnail": "http:\/\/www.ngdc.noaa.gov\/dem\/squareCellGrid\/getGraphic\/4870",
  "thumbnailDescription": "Perspective view of DEM",
  "creationDate": null,
  "revisionDate": null,
  "publicationDate": "2013-02-14",
  "citeAsStatements": [

  ],
  "crossReferences": [
    {
      "title": "Bathymetric Digital Elevation Model of the Mariana Trench",
      "code": null,
      "publicationDate": "2013-02-14",
      "link": {
        "linkName": null,
        "linkProtocol": null,
        "linkUrl": null,
        "linkDescription": null,
        "linkFunction": null
      }
    }
  ],
  "largerWorks": [
    {
      "title": "Mariana Trench Bathymetric Digital Elevation Model",
      "code": null,
      "publicationDate": "2008-10-31",
      "link": {
        "linkName": null,
        "linkProtocol": null,
        "linkUrl": null,
        "linkDescription": null,
        "linkFunction": null
      }
    }
  ],
  "useLimitation": "Not to be used for navigation. Although these data are of high quality and useful for planning and modeling purposes, they are not suitable for navigation. For navigation, please refer to the NOS nautical chart series.Produced by the NOAA National Geophysical Data Center. Not subject to copyright protection within the United States.While every effort has been made to ensure that these data are accurate and reliable within the limits of the current state of the art, NOAA cannot assume liability for any damages caused by any errors or omissions in the data, nor as a result of the failure of the data to function on a particular system. NOAA makes no warranty, expressed or implied, nor does the fact of distribution constitute such a warranty.",
  "legalConstraints": [

  ],
  "accessFeeStatement": null,
  "orderingInstructions": null,
  "edition": "First",
  "dsmmAccessibility": 0,
  "dsmmDataIntegrity": 0,
  "dsmmDataQualityAssessment": 0,
  "dsmmDataQualityAssurance": 0,
  "dsmmDataQualityControlMonitoring": 0,
  "dsmmPreservability": 0,
  "dsmmProductionSustainability": 0,
  "dsmmTransparencyTraceability": 0,
  "dsmmUsability": 0,
  "dsmmAverage": 0,
  "updateFrequency": "asNeeded",
  "presentationForm": "mapDigital",
  "services": [
    "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3J2OlNWX1NlcnZpY2VJZGVudGlmaWNhdGlvbiB4bWxuczpzcnY9Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvc3J2IiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ21pICAgaHR0cDovL3d3dy5uZ2RjLm5vYWEuZ292L21ldGFkYXRhL3B1Ymxpc2hlZC94c2Qvc2NoZW1hLnhzZCIgdXVpZD0iMmVlOWViODEtZmE1ZC00YTY2LWEyNTYtNDYzM2VhZGZkZWRjIj4KICA8Z21kOmNpdGF0aW9uIHhtbG5zOmdtZD0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nbWQiPgogICAgPGdtZDpDSV9DaXRhdGlvbj4KICAgICAgPGdtZDp0aXRsZT4KICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5EaWdpdGFsIEVsZXZhdGlvbiBNb2RlbHM6IENvbG9yIFNoYWRlZCBSZWxpZWYgQXJjR0lTIEltYWdlIFNlcnZpY2U8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgIDwvZ21kOnRpdGxlPgogICAgICA8Z21kOmRhdGU+CiAgICAgICAgPGdtZDpDSV9EYXRlPgogICAgICAgICAgPGdtZDpkYXRlPgogICAgICAgICAgICA8Z2NvOkRhdGUgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+MjAxMS0xMC0xOTwvZ2NvOkRhdGU+CiAgICAgICAgICA8L2dtZDpkYXRlPgogICAgICAgICAgPGdtZDpkYXRlVHlwZT4KICAgICAgICAgICAgPGdtZDpDSV9EYXRlVHlwZUNvZGUgY29kZUxpc3RWYWx1ZT0iY3JlYXRpb24iIGNvZGVMaXN0PSJodHRwOi8vd3d3Lm5nZGMubm9hYS5nb3YvbWV0YWRhdGEvcHVibGlzaGVkL3hzZC9zY2hlbWEvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjQ0lfRGF0ZVR5cGVDb2RlIj5jcmVhdGlvbjwvZ21kOkNJX0RhdGVUeXBlQ29kZT4KICAgICAgICAgIDwvZ21kOmRhdGVUeXBlPgogICAgICAgIDwvZ21kOkNJX0RhdGU+CiAgICAgIDwvZ21kOmRhdGU+CiAgICAgIDxnbWQ6Y2l0ZWRSZXNwb25zaWJsZVBhcnR5PgogICAgICAgIDxnbWQ6Q0lfUmVzcG9uc2libGVQYXJ0eT4KICAgICAgICAgIDxnbWQ6b3JnYW5pc2F0aW9uTmFtZT4KICAgICAgICAgICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+RE9DL05PQUEvTkVTRElTL05DRUkgJmd0OyBOYXRpb25hbCBDZW50ZXJzIGZvciBFbnZpcm9ubWVudGFsIEluZm9ybWF0aW9uLCBORVNESVMsIE5PQUEsIERlcGFydG1lbnQgb2YgQ29tbWVyY2U8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgICAgICA8L2dtZDpvcmdhbmlzYXRpb25OYW1lPgogICAgICAgICAgPGdtZDpjb250YWN0SW5mbz4KICAgICAgICAgICAgPGdtZDpDSV9Db250YWN0PgogICAgICAgICAgICAgIDxnbWQ6b25saW5lUmVzb3VyY2U+CiAgICAgICAgICAgICAgICA8Z21kOkNJX09ubGluZVJlc291cmNlPgogICAgICAgICAgICAgICAgICA8Z21kOmxpbmthZ2U+CiAgICAgICAgICAgICAgICAgICAgPGdtZDpVUkw+aHR0cDovL25nZGMubm9hYS5nb3YvbWdnL2NvYXN0YWwvY29hc3RhbC5odG1sPC9nbWQ6VVJMPgogICAgICAgICAgICAgICAgICA8L2dtZDpsaW5rYWdlPgogICAgICAgICAgICAgICAgICA8Z21kOm5hbWU+CiAgICAgICAgICAgICAgICAgICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+SW50ZWdyYXRlZCBNb2RlbHMgb2YgQ29hc3RhbCBSZWxpZWYgYXQgTkdEQzwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgICAgICAgICAgPC9nbWQ6bmFtZT4KICAgICAgICAgICAgICAgICAgPGdtZDpkZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5QbGVhc2Ugc2VlIHdlYnNpdGUgZm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgQ29hc3RhbCBERU1zLjwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgICAgICAgICAgPC9nbWQ6ZGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICAgIDxnbWQ6ZnVuY3Rpb24+CiAgICAgICAgICAgICAgICAgICAgPGdtZDpDSV9PbkxpbmVGdW5jdGlvbkNvZGUgY29kZUxpc3RWYWx1ZT0iaW5mb3JtYXRpb24iIGNvZGVMaXN0PSJodHRwOi8vd3d3Lm5nZGMubm9hYS5nb3YvbWV0YWRhdGEvcHVibGlzaGVkL3hzZC9zY2hlbWEvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjQ0lfT25MaW5lRnVuY3Rpb25Db2RlIj5pbmZvcm1hdGlvbjwvZ21kOkNJX09uTGluZUZ1bmN0aW9uQ29kZT4KICAgICAgICAgICAgICAgICAgPC9nbWQ6ZnVuY3Rpb24+CiAgICAgICAgICAgICAgICA8L2dtZDpDSV9PbmxpbmVSZXNvdXJjZT4KICAgICAgICAgICAgICA8L2dtZDpvbmxpbmVSZXNvdXJjZT4KICAgICAgICAgICAgPC9nbWQ6Q0lfQ29udGFjdD4KICAgICAgICAgIDwvZ21kOmNvbnRhY3RJbmZvPgogICAgICAgICAgPGdtZDpyb2xlPgogICAgICAgICAgICA8Z21kOkNJX1JvbGVDb2RlIGNvZGVMaXN0VmFsdWU9InB1Ymxpc2hlciIgY29kZUxpc3Q9Imh0dHA6Ly93d3cubmdkYy5ub2FhLmdvdi9tZXRhZGF0YS9wdWJsaXNoZWQveHNkL3NjaGVtYS9yZXNvdXJjZXMvQ29kZWxpc3QvZ214Q29kZWxpc3RzLnhtbCNDSV9Sb2xlQ29kZSI+cHVibGlzaGVyPC9nbWQ6Q0lfUm9sZUNvZGU+CiAgICAgICAgICA8L2dtZDpyb2xlPgogICAgICAgIDwvZ21kOkNJX1Jlc3BvbnNpYmxlUGFydHk+CiAgICAgIDwvZ21kOmNpdGVkUmVzcG9uc2libGVQYXJ0eT4KICAgICAgPGdtZDpjaXRlZFJlc3BvbnNpYmxlUGFydHk+CiAgICAgICAgPGdtZDpDSV9SZXNwb25zaWJsZVBhcnR5PgogICAgICAgICAgPGdtZDpvcmdhbmlzYXRpb25OYW1lPgogICAgICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5ET0MvTk9BQS9ORVNESVMvTkNFSSAmZ3Q7IE5hdGlvbmFsIENlbnRlcnMgZm9yIEVudmlyb25tZW50YWwgSW5mb3JtYXRpb24sIE5FU0RJUywgTk9BQSwgRGVwYXJ0bWVudCBvZiBDb21tZXJjZTwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgIDwvZ21kOm9yZ2FuaXNhdGlvbk5hbWU+CiAgICAgICAgICA8Z21kOmNvbnRhY3RJbmZvPgogICAgICAgICAgICA8Z21kOkNJX0NvbnRhY3Q+CiAgICAgICAgICAgICAgPGdtZDpvbmxpbmVSZXNvdXJjZT4KICAgICAgICAgICAgICAgIDxnbWQ6Q0lfT25saW5lUmVzb3VyY2U+CiAgICAgICAgICAgICAgICAgIDxnbWQ6bGlua2FnZT4KICAgICAgICAgICAgICAgICAgICA8Z21kOlVSTD5odHRwOi8vbm9hYS5tYXBzLmFyY2dpcy5jb20vaG9tZS9pdGVtLmh0bWw\\/cmVxdWVzdD1HZXRDYXBhYmlsaXRpZXMmYW1wO3NlcnZpY2U9V01TPC9nbWQ6VVJMPgogICAgICAgICAgPC9nbWQ6bGlua2FnZT4KICAgICAgICAgIDxnbWQ6cHJvdG9jb2w+CiAgICAgICAgICAgIDxnY286Q2hhcmFjdGVyU3RyaW5nIHhtbG5zOmdjbz0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nY28iPmh0dHA8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgICAgICA8L2dtZDpwcm90b2NvbD4KICAgICAgICAgIDxnbWQ6YXBwbGljYXRpb25Qcm9maWxlPgogICAgICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5PcGVuIEdlb3NwYXRpYWwgQ29uc29ydGl1bSBXZWIgTWFwIFNlcnZpY2UgKFdNUyk8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgICAgICA8L2dtZDphcHBsaWNhdGlvblByb2ZpbGU+CiAgICAgICAgICA8Z21kOm5hbWU+CiAgICAgICAgICAgIDxnY286Q2hhcmFjdGVyU3RyaW5nIHhtbG5zOmdjbz0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nY28iPkRpZ2l0YWwgRWxldmF0aW9uIE1vZGVsczogQ29sb3IgU2hhZGVkIFJlbGllZiBXZWIgTWFwIFNlcnZpY2UgKFdNUyk8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgICAgICA8L2dtZDpuYW1lPgogICAgICAgICAgPGdtZDpkZXNjcmlwdGlvbj4KICAgICAgICAgICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+Q2FwYWJpbGl0aWVzIGRvY3VtZW50IGZvciBPcGVuIEdlb3NwYXRpYWwgQ29uc29ydGl1bSBXZWIgTWFwIFNlcnZpY2UgZm9yIERpZ2l0YWwgRWxldmF0aW9uIE1vZGVsczogQ29sb3IgU2hhZGVkIFJlbGllZjwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgIDwvZ21kOmRlc2NyaXB0aW9uPgogICAgICAgICAgPGdtZDpmdW5jdGlvbj4KICAgICAgICAgICAgPGdtZDpDSV9PbkxpbmVGdW5jdGlvbkNvZGUgY29kZUxpc3RWYWx1ZT0ic2VhcmNoIiBjb2RlTGlzdD0iaHR0cDovL3d3dy5uZ2RjLm5vYWEuZ292L21ldGFkYXRhL3B1Ymxpc2hlZC94c2Qvc2NoZW1hL3Jlc291cmNlcy9Db2RlbGlzdC9nbXhDb2RlbGlzdHMueG1sI0NJX09uTGluZUZ1bmN0aW9uQ29kZSI+c2VhcmNoPC9nbWQ6Q0lfT25MaW5lRnVuY3Rpb25Db2RlPgogICAgICAgICAgPC9nbWQ6ZnVuY3Rpb24+CiAgICAgICAgPC9nbWQ6Q0lfT25saW5lUmVzb3VyY2U+CiAgICAgIDwvc3J2OmNvbm5lY3RQb2ludD4KICAgIDwvc3J2OlNWX09wZXJhdGlvbk1ldGFkYXRhPgogIDwvc3J2OmNvbnRhaW5zT3BlcmF0aW9ucz4KPC9zcnY6U1ZfU2VydmljZUlkZW50aWZpY2F0aW9uPgo=",
    "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3J2OlNWX1NlcnZpY2VJZGVudGlmaWNhdGlvbiB4bWxuczpzcnY9Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvc3J2IiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ21pIGh0dHA6Ly93d3cubmdkYy5ub2FhLmdvdi9tZXRhZGF0YS9wdWJsaXNoZWQveHNkL3NjaGVtYS54c2QiIHV1aWQ9IjQ0ODZkNDFhLWM0ZmYtNGMwOC04MzE1LTlkMjJhMmJlOGI3MyI+CiAgPGdtZDpjaXRhdGlvbiB4bWxuczpnbWQ9Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ21kIj4KICAgIDxnbWQ6Q0lfQ2l0YXRpb24+CiAgICAgIDxnbWQ6dGl0bGU+CiAgICAgICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+RGlnaXRhbCBFbGV2YXRpb24gTW9kZWwgRm9vdHByaW50cyBBcmNHSVMgTWFwIFNlcnZpY2U8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgIDwvZ21kOnRpdGxlPgogICAgICA8Z21kOmRhdGU+CiAgICAgICAgPGdtZDpDSV9EYXRlPgogICAgICAgICAgPGdtZDpkYXRlPgogICAgICAgICAgICA8Z2NvOkRhdGUgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+MjAxMS0wMi0xNTwvZ2NvOkRhdGU+CiAgICAgICAgICA8L2dtZDpkYXRlPgogICAgICAgICAgPGdtZDpkYXRlVHlwZT4KICAgICAgICAgICAgPGdtZDpDSV9EYXRlVHlwZUNvZGUgY29kZUxpc3RWYWx1ZT0iY3JlYXRpb24iIGNvZGVMaXN0PSJodHRwOi8vd3d3Lm5nZGMubm9hYS5nb3YvbWV0YWRhdGEvcHVibGlzaGVkL3hzZC9zY2hlbWEvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjQ0lfRGF0ZVR5cGVDb2RlIj5jcmVhdGlvbjwvZ21kOkNJX0RhdGVUeXBlQ29kZT4KICAgICAgICAgIDwvZ21kOmRhdGVUeXBlPgogICAgICAgIDwvZ21kOkNJX0RhdGU+CiAgICAgIDwvZ21kOmRhdGU+CiAgICAgIDxnbWQ6Y2l0ZWRSZXNwb25zaWJsZVBhcnR5PgogICAgICAgIDxnbWQ6Q0lfUmVzcG9uc2libGVQYXJ0eT4KICAgICAgICAgIDxnbWQ6b3JnYW5pc2F0aW9uTmFtZT4KICAgICAgICAgICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+RE9DL05PQUEvTkVTRElTL05DRUkgJmd0OyBOYXRpb25hbCBDZW50ZXJzIGZvciBFbnZpcm9ubWVudGFsIEluZm9ybWF0aW9uLCBORVNESVMsIE5PQUEsIERlcGFydG1lbnQgb2YgQ29tbWVyY2U8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgICAgICA8L2dtZDpvcmdhbmlzYXRpb25OYW1lPgogICAgICAgICAgPGdtZDpjb250YWN0SW5mbz4KICAgICAgICAgICAgPGdtZDpDSV9Db250YWN0PgogICAgICAgICAgICAgIDxnbWQ6b25saW5lUmVzb3VyY2U+CiAgICAgICAgICAgICAgICA8Z21kOkNJX09ubGluZVJlc291cmNlPgogICAgICAgICAgICAgICAgICA8Z21kOmxpbmthZ2U+CiAgICAgICAgICAgICAgICAgICAgPGdtZDpVUkw+aHR0cDovL25nZGMubm9hYS5nb3YvbWdnL2NvYXN0YWwvY29hc3RhbC5odG1sPC9nbWQ6VVJMPgogICAgICAgICAgICAgICAgICA8L2dtZDpsaW5rYWdlPgogICAgICAgICAgICAgICAgICA8Z21kOm5hbWU+CiAgICAgICAgICAgICAgICAgICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+SW50ZWdyYXRlZCBNb2RlbHMgb2YgQ29hc3RhbCBSZWxpZWYgYXQgTkdEQzwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgICAgICAgICAgPC9nbWQ6bmFtZT4KICAgICAgICAgICAgICAgICAgPGdtZDpkZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5QbGVhc2Ugc2VlIHdlYnNpdGUgZm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgQ29hc3RhbCBERU1zLjwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgICAgICAgICAgPC9nbWQ6ZGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICAgIDxnbWQ6ZnVuY3Rpb24+CiAgICAgICAgICAgICAgICAgICAgPGdtZDpDSV9PbkxpbmVGdW5jdGlvbkNvZGUgY29kZUxpc3RWYWx1ZT0iaW5mb3JtYXRpb24iIGNvZGVMaXN0PSJodHRwOi8vd3d3Lm5nZGMubm9hYS5nb3YvbWV0YWRhdGEvcHVibGlzaGVkL3hzZC9zY2hlbWEvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjQ0lfT25MaW5lRnVuY3Rpb25Db2RlIj5pbmZvcm1hdGlvbjwvZ21kOkNJX09uTGluZUZ1bmN0aW9uQ29kZT4KICAgICAgICAgICAgICAgICAgPC9nbWQ6ZnVuY3Rpb24+CiAgICAgICAgICAgICAgICA8L2dtZDpDSV9PbmxpbmVSZXNvdXJjZT4KICAgICAgICAgICAgICA8L2dtZDpvbmxpbmVSZXNvdXJjZT4KICAgICAgICAgICAgPC9nbWQ6Q0lfQ29udGFjdD4KICAgICAgICAgIDwvZ21kOmNvbnRhY3RJbmZvPgogICAgICAgICAgPGdtZDpyb2xlPgogICAgICAgICAgICA8Z21kOkNJX1JvbGVDb2RlIGNvZGVMaXN0VmFsdWU9InB1Ymxpc2hlciIgY29kZUxpc3Q9Imh0dHA6Ly93d3cubmdkYy5ub2FhLmdvdi9tZXRhZGF0YS9wdWJsaXNoZWQveHNkL3NjaGVtYS9yZXNvdXJjZXMvQ29kZWxpc3QvZ214Q29kZWxpc3RzLnhtbCNDSV9Sb2xlQ29kZSI+cHVibGlzaGVyPC9nbWQ6Q0lfUm9sZUNvZGU+CiAgICAgICAgICA8L2dtZDpyb2xlPgogICAgICAgIDwvZ21kOkNJX1Jlc3BvbnNpYmxlUGFydHk+CiAgICAgIDwvZ21kOmNpdGVkUmVzcG9uc2libGVQYXJ0eT4KICAgICAgPGdtZDpjaXRlZFJlc3BvbnNpYmxlUGFydHk+CiAgICAgICAgPGdtZDpDSV9SZXNwb25zaWJsZVBhcnR5PgogICAgICAgICAgPGdtZDpvcmdhbmlzYXRpb25OYW1lPgogICAgICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5ET0MvTk9BQS9ORVNESVMvTkNFSSAmZ3Q7IE5hdGlvbmFsIENlbnRlcnMgZm9yIEVudmlyb25tZW50YWwgSW5mb3JtYXRpb24sIE5FU0RJUywgTk9BQSwgRGVwYXJ0bWVudCBvZiBDb21tZXJjZTwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgIDwvZ21kOm9yZ2FuaXNhdGlvbk5hbWU+CiAgICAgICAgICA8Z21kOmNvbnRhY3RJbmZvPgogICAgICAgICAgICA8Z21kOkNJX0NvbnRhY3Q+CiAgICAgICAgICAgICAgPGdtZDpvbmxpbmVSZXNvdXJjZT4KICAgICAgICAgICAgICAgIDxnbWQ6Q0lfT25saW5lUmVzb3VyY2U+CiAgICAgICAgICAgICAgICAgIDxnbWQ6bGlua2FnZT4KICAgICAgICAgICAgICAgICAgICA8Z21kOlVSTD5odHRwOi8vbm9hYS5tYXBzLmFyY2dpcy5jb20vaG9tZS9pdGVtLmh0bWw\/aWQ9ZDQxZjM5YzhhNjY4NGM1NGI2MmM4ZjFhYjczMWQ1YWQ8L2dtZDpVUkw+CiAgICAgICAgICAgICAgICAgIDwvZ21kOmxpbmthZ2U+CiAgICAgICAgICAgICAgICAgIDxnbWQ6bmFtZT4KICAgICAgICAgICAgICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5OT0FBIEdlb1BsYXRmb3JtIEVudHJ5IGZvciBEaWdpdGFsIEVsZXZhdGlvbiBNb2RlbCBGb290cHJpbnRzPC9nY286Q2hhcmFjdGVyU3RyaW5nPgogICAgICAgICAgICAgICAgICA8L2dtZDpuYW1lPgogICAgICAgICAgICAgICAgICA8Z21kOmRlc2NyaXB0aW9uPgogICAgICAgICAgICAgICAgICAgIDxnY286Q2hhcmFjdGVyU3RyaW5nIHhtbG5zOmdjbz0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nY28iPk5PQUEgR2VvUGxhdGZvcm0gbGlzdGluZyBmb3IgRGlnaXRhbCBFbGV2YXRpb24gTW9kZWwgRm9vdHByaW50cyBBcmNHSVMgTWFwIFNlcnZpY2U8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgICAgICAgICAgICAgIDwvZ21kOmRlc2NyaXB0aW9uPgogICAgICAgICAgICAgICAgICA8Z21kOmZ1bmN0aW9uPgogICAgICAgICAgICAgICAgICAgIDxnbWQ6Q0lfT25MaW5lRnVuY3Rpb25Db2RlIGNvZGVMaXN0VmFsdWU9ImluZm9ybWF0aW9uIiBjb2RlTGlzdD0iaHR0cDovL3d3dy5uZ2RjLm5vYWEuZ292L21ldGFkYXRhL3B1Ymxpc2hlZC94c2Qvc2NoZW1hL3Jlc291cmNlcy9Db2RlbGlzdC9nbXhDb2RlbGlzdHMueG1sI0NJX09uTGluZUZ1bmN0aW9uQ29kZSI+aW5mb3JtYXRpb248L2dtZDpDSV9PbkxpbmVGdW5jdGlvbkNvZGU+CiAgICAgICAgICAgICAgICAgIDwvZ21kOmZ1bmN0aW9uPgogICAgICAgICAgICAgICAgPC9nbWQ6Q0lfT25saW5lUmVzb3VyY2U+CiAgICAgICAgICAgICAgPC9nbWQ6b25saW5lUmVzb3VyY2U+CiAgICAgICAgICAgIDwvZ21kOkNJX0NvbnRhY3Q+CiAgICAgICAgICA8L2dtZDpjb250YWN0SW5mbz4KICAgICAgICAgIDxnbWQ6cm9sZT4KICAgICAgICAgICAgPGdtZDpDSV9Sb2xlQ29kZSBjb2RlTGlzdFZhbHVlPSJwdWJsaXNoZXIiIGNvZGVMaXN0PSJodHRwOi8vd3d3Lm5nZGMubm9hYS5nb3YvbWV0YWRhdGEvcHVibGlzaGVkL3hzZC9zY2hlbWEvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjQ0lfUm9sZUNvZGUiPnB1Ymxpc2hlcjwvZ21kOkNJX1JvbGVDb2RlPgogICAgICAgICAgPC9nbWQ6cm9sZT4KICAgICAgICA8L2dtZDpDSV9SZXNwb25zaWJsZVBhcnR5PgogICAgICA8L2dtZDpjaXRlZFJlc3BvbnNpYmxlUGFydHk+CiAgICAgIDxnbWQ6Y2l0ZWRSZXNwb25zaWJsZVBhcnR5PgogICAgICAgIDxnbWQ6Q0lfUmVzcG9uc2libGVQYXJ0eT4KICAgICAgICAgIDxnbWQ6b3JnYW5pc2F0aW9uTmFtZT4KICAgICAgICAgICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+RE9DL05PQUEvTkVTRElTL05DRUkgJmd0OyBOYXRpb25hbCBDZW50ZXJzIGZvciBFbnZpcm9ubWVudGFsIEluZm9ybWF0aW9uLCBORVNESVMsIE5PQUEsIERlcGFydG1lbnQgb2YgQ29tbWVyY2U8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgICAgICA8L2dtZDpvcmdhbmlzYXRpb25OYW1lPgogICAgICAgICAgPGdtZDpjb250YWN0SW5mbz4KICAgICAgICAgICAgPGdtZDpDSV9Db250YWN0PgogICAgICAgICAgICAgIDxnbWQ6b25saW5lUmVzb3VyY2U+CiAgICAgICAgICAgICAgICA8Z21kOkNJX09ubGluZVJlc291cmNlPgogICAgICAgICAgICAgICAgICA8Z21kOmxpbmthZ2U+CiAgICAgICAgICAgICAgICAgICAgPGdtZDpVUkw+aHR0cDovL2dpcy5uZ2RjLm5vYWEuZ292L2FyY2dpcy9yZXN0L3NlcnZpY2VzL2RlbV9oaWxsc2hhZGVzL0ltYWdlU2VydmVyPC9nbWQ6VVJMPgogICAgICAgICAgICAgICAgICA8L2dtZDpsaW5rYWdlPgogICAgICAgICAgICAgICAgICA8Z21kOm5hbWU+CiAgICAgICAgICAgICAgICAgICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+REVNIENvbG9yIFNoYWRlZCBSZWxpZWYgSW1hZ2UgU2VydmljZTwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgICAgICAgICAgPC9nbWQ6bmFtZT4KICAgICAgICAgICAgICAgICAgPGdtZDpkZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5BbiBBcmNHSVMgaW1hZ2Ugc2VydmljZSBzaG93aW5nIGNvbG9yIHNoYWRlZCByZWxpZWYgdmlzdWFsaXphdGlvbnMgb2YgbGFuZCBhbmQgc2VhZmxvb3IgZGlnaXRhbCBlbGV2YXRpb24gbW9kZWxzIChERU1zKSBhdmFpbGFibGUuPC9nY286Q2hhcmFjdGVyU3RyaW5nPgogICAgICAgICAgICAgICAgICA8L2dtZDpkZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgICAgPGdtZDpmdW5jdGlvbj4KICAgICAgICAgICAgICAgICAgICA8Z21kOkNJX09uTGluZUZ1bmN0aW9uQ29kZSBjb2RlTGlzdFZhbHVlPSJzZWFyY2giIGNvZGVMaXN0PSJodHRwOi8vd3d3Lm5nZGMubm9hYS5nb3YvbWV0YWRhdGEvcHVibGlzaGVkL3hzZC9zY2hlbWEvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjQ0lfT25MaW5lRnVuY3Rpb25Db2RlIj5zZWFyY2g8L2dtZDpDSV9PbkxpbmVGdW5jdGlvbkNvZGU+CiAgICAgICAgICAgICAgICAgIDwvZ21kOmZ1bmN0aW9uPgogICAgICAgICAgICAgICAgPC9nbWQ6Q0lfT25saW5lUmVzb3VyY2U+CiAgICAgICAgICAgICAgPC9nbWQ6b25saW5lUmVzb3VyY2U+CiAgICAgICAgICAgIDwvZ21kOkNJX0NvbnRhY3Q+CiAgICAgICAgICA8L2dtZDpjb250YWN0SW5mbz4KICAgICAgICAgIDxnbWQ6cm9sZT4KICAgICAgICAgICAgPGdtZDpDSV9Sb2xlQ29kZSBjb2RlTGlzdFZhbHVlPSJwdWJsaXNoZXIiIGNvZGVMaXN0PSJodHRwOi8vd3d3Lm5nZGMubm9hYS5nb3YvbWV0YWRhdGEvcHVibGlzaGVkL3hzZC9zY2hlbWEvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjQ0lfUm9sZUNvZGUiPnB1Ymxpc2hlcjwvZ21kOkNJX1JvbGVDb2RlPgogICAgICAgICAgPC9nbWQ6cm9sZT4KICAgICAgICA8L2dtZDpDSV9SZXNwb25zaWJsZVBhcnR5PgogICAgICA8L2dtZDpjaXRlZFJlc3BvbnNpYmxlUGFydHk+CiAgICA8L2dtZDpDSV9DaXRhdGlvbj4KICA8L2dtZDpjaXRhdGlvbj4KICA8Z21kOmFic3RyYWN0IHhtbG5zOmdtZD0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nbWQiPgogICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+QSBtYXAgc2VydmljZSBzaG93aW5nIHRoZSBsb2NhdGlvbiBhbmQgY292ZXJhZ2Ugb2YgbGFuZCBhbmQgc2VhZmxvb3IgZGlnaXRhbCBlbGV2YXRpb24gbW9kZWxzIChERU1zKSBhdmFpbGFibGUgZnJvbSBOT0FBJ3MgTmF0aW9uYWwgR2VvcGh5c2ljYWwgRGF0YSBDZW50ZXIuIE5PQUEncyBOYXRpb25hbCBHZW9waHlzaWNhbCBEYXRhIENlbnRlciAoTkdEQykgYnVpbGRzIGFuZCBkaXN0cmlidXRlcyBoaWdoLXJlc29sdXRpb24sIGNvYXN0YWwgZGlnaXRhbCBlbGV2YXRpb24gbW9kZWxzIChERU1zKSB0aGF0IGludGVncmF0ZSBvY2VhbiBiYXRoeW1ldHJ5IGFuZCBsYW5kIHRvcG9ncmFwaHkgdG8gc3VwcG9ydCBOT0FBJ3MgbWlzc2lvbiB0byB1bmRlcnN0YW5kIGFuZCBwcmVkaWN0IGNoYW5nZXMgaW4gRWFydGgncyBlbnZpcm9ubWVudCwgYW5kIGNvbnNlcnZlIGFuZCBtYW5hZ2UgY29hc3RhbCBhbmQgbWFyaW5lIHJlc291cmNlcyB0byBtZWV0IG91ciBOYXRpb24ncyBlY29ub21pYywgc29jaWFsLCBhbmQgZW52aXJvbm1lbnRhbCBuZWVkcy4gVGhleSBjYW4gYmUgdXNlZCBmb3IgbW9kZWxpbmcgb2YgY29hc3RhbCBwcm9jZXNzZXMgKHRzdW5hbWkgaW51bmRhdGlvbiwgc3Rvcm0gc3VyZ2UsIHNlYS1sZXZlbCByaXNlLCBjb250YW1pbmFudCBkaXNwZXJzYWwsIGV0Yy4pLCBlY29zeXN0ZW1zIG1hbmFnZW1lbnQgYW5kIGhhYml0YXQgcmVzZWFyY2gsIGNvYXN0YWwgYW5kIG1hcmluZSBzcGF0aWFsIHBsYW5uaW5nLCBhbmQgaGF6YXJkIG1pdGlnYXRpb24gYW5kIGNvbW11bml0eSBwcmVwYXJlZG5lc3MuIExheWVycyBhdmFpbGFibGUgaW4gdGhlIG1hcCBzZXJ2aWNlOiBMYXllcnMgMS00OiBERU1zIGJ5IENhdGVnb3J5IChpbmNsdWRlcyB2YXJpb3VzIERFTXMsIGJvdGggaG9zdGVkIGF0IE5DRUksIGFuZCBlbHNld2hlcmUgb24gdGhlIHdlYik7IExheWVycyA2LTExOiBOR0RDIERFTSBQcm9qZWN0cyAoREVNcyBob3N0ZWQgYXQgTkNFSSwgY29sb3ItY29kZWQgYnkgcHJvamVjdCk7IExheWVyIDEyOiBBbGwgTkNFSSBCYXRoeW1ldHJ5IERFTXMgKEFsbCBiYXRoeW1ldHJ5IG9yIGJhdGh5LXRvcG8gREVNcyBob3N0ZWQgYXQgTkNFSSkuPC9nY286Q2hhcmFjdGVyU3RyaW5nPgogIDwvZ21kOmFic3RyYWN0PgogIDxnbWQ6cG9pbnRPZkNvbnRhY3QgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHhtbG5zOmdtZD0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nbWQiIHhsaW5rOnRpdGxlPSJWYXJuZXIsIEplc3NlIj4KICAgIDxnbWQ6Q0lfUmVzcG9uc2libGVQYXJ0eSB4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ21pIGh0dHA6Ly93d3cubmdkYy5ub2FhLmdvdi9tZXRhZGF0YS9wdWJsaXNoZWQveHNkL3NjaGVtYS54c2QiIHV1aWQ9IjgzNGNlMWFhLTA2MDYtNGQwOS04NmQ4LTg3NTY2MmJjMDQ5MSI+CiAgICAgIDxnbWQ6aW5kaXZpZHVhbE5hbWU+CiAgICAgICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+SmVzc2UgVmFybmVyPC9nY286Q2hhcmFjdGVyU3RyaW5nPgogICAgICA8L2dtZDppbmRpdmlkdWFsTmFtZT4KICAgICAgPGdtZDpvcmdhbmlzYXRpb25OYW1lPgogICAgICAgIDxnY286Q2hhcmFjdGVyU3RyaW5nIHhtbG5zOmdjbz0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nY28iPkRPQy9OT0FBL05FU0RJUy9OQ0VJICZndDsgTmF0aW9uYWwgQ2VudGVycyBmb3IgRW52aXJvbm1lbnRhbCBJbmZvcm1hdGlvbiwgTkVTRElTLCBOT0FBLCBVLlMuIERlcGFydG1lbnQgb2YgQ29tbWVyY2U8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgIDwvZ21kOm9yZ2FuaXNhdGlvbk5hbWU+CiAgICAgIDxnbWQ6Y29udGFjdEluZm8+CiAgICAgICAgPGdtZDpDSV9Db250YWN0PgogICAgICAgICAgPGdtZDphZGRyZXNzPgogICAgICAgICAgICA8Z21kOkNJX0FkZHJlc3M+CiAgICAgICAgICAgICAgPGdtZDplbGVjdHJvbmljTWFpbEFkZHJlc3M+CiAgICAgICAgICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5KZXNzZS5WYXJuZXJAbm9hYS5nb3Y8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgICAgICAgICAgPC9nbWQ6ZWxlY3Ryb25pY01haWxBZGRyZXNzPgogICAgICAgICAgICA8L2dtZDpDSV9BZGRyZXNzPgogICAgICAgICAgPC9nbWQ6YWRkcmVzcz4KICAgICAgICA8L2dtZDpDSV9Db250YWN0PgogICAgICA8L2dtZDpjb250YWN0SW5mbz4KICAgICAgPGdtZDpyb2xlPgogICAgICAgIDxnbWQ6Q0lfUm9sZUNvZGUgY29kZUxpc3RWYWx1ZT0icG9pbnRPZkNvbnRhY3QiIGNvZGVMaXN0PSJodHRwOi8vd3d3Lm5nZGMubm9hYS5nb3YvbWV0YWRhdGEvcHVibGlzaGVkL3hzZC9zY2hlbWEvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjQ0lfUm9sZUNvZGUiPnBvaW50T2ZDb250YWN0PC9nbWQ6Q0lfUm9sZUNvZGU+CiAgICAgIDwvZ21kOnJvbGU+CiAgICA8L2dtZDpDSV9SZXNwb25zaWJsZVBhcnR5PgogIDwvZ21kOnBvaW50T2ZDb250YWN0PgogIDxnbWQ6ZGVzY3JpcHRpdmVLZXl3b3JkcyB4bWxuczpnbWQ9Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ21kIj4KICAgIDxnbWQ6TURfS2V5d29yZHM+CiAgICAgIDxnbWQ6a2V5d29yZD4KICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5EQVRBIEFOQUxZU0lTIEFORCBWSVNVQUxJWkFUSU9OICZndDsgR0VPR1JBUEhJQyBJTkZPUk1BVElPTiBTWVNURU1TICZndDsgV0VCLUJBU0VEIEdFT0dSQVBISUMgSU5GT1JNQVRJT04gU1lTVEVNUzwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgPC9nbWQ6a2V5d29yZD4KICAgICAgPGdtZDprZXl3b3JkPgogICAgICAgIDxnY286Q2hhcmFjdGVyU3RyaW5nIHhtbG5zOmdjbz0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nY28iPkRBVEEgTUFOQUdFTUVOVC9EQVRBIEhBTkRMSU5HICZndDsgREFUQSBTRUFSQ0ggQU5EIFJFVFJJRVZBTDwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgPC9nbWQ6a2V5d29yZD4KICAgICAgPGdtZDprZXl3b3JkPgogICAgICAgIDxnY286Q2hhcmFjdGVyU3RyaW5nIHhtbG5zOmdjbz0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nY28iPkRBVEEgQU5BTFlTSVMgQU5EIFZJU1VBTElaQVRJT04gJmd0OyBWSVNVQUxJWkFUSU9OL0lNQUdFIFBST0NFU1NJTkc8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgIDwvZ21kOmtleXdvcmQ+CiAgICAgIDxnbWQ6dHlwZT4KICAgICAgICA8Z21kOk1EX0tleXdvcmRUeXBlQ29kZSBjb2RlTGlzdFZhbHVlPSJ0aGVtZSIgY29kZUxpc3Q9Imh0dHA6Ly93d3cubmdkYy5ub2FhLmdvdi9tZXRhZGF0YS9wdWJsaXNoZWQveHNkL3NjaGVtYS9yZXNvdXJjZXMvQ29kZWxpc3QvZ214Q29kZWxpc3RzLnhtbCNNRF9LZXl3b3JkVHlwZUNvZGUiPnRoZW1lPC9nbWQ6TURfS2V5d29yZFR5cGVDb2RlPgogICAgICA8L2dtZDp0eXBlPgogICAgICA8Z21kOnRoZXNhdXJ1c05hbWUgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHhsaW5rOnRpdGxlPSJOQVNBL0dsb2JhbCBDaGFuZ2UgTWFzdGVyIERpcmVjdG9yeSAoR0NNRCkgRWFydGggU2NpZW5jZSBTZXJ2aWNlcyBLZXl3b3JkcyI+CiAgICAgICAgPGdtZDpDSV9DaXRhdGlvbiB1dWlkPSI5ZjBkZTZlNy00MjhiLTExZGYtOTg3OS0wODAwMjAwYzlhNjYiPgogICAgICAgICAgPGdtZDp0aXRsZT4KICAgICAgICAgICAgPGdjbzpDaGFyYWN0ZXJTdHJpbmcgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+TkFTQS9HQ01EIFNlcnZpY2VzIEtleXdvcmRzPC9nY286Q2hhcmFjdGVyU3RyaW5nPgogICAgICAgICAgPC9nbWQ6dGl0bGU+CiAgICAgICAgICA8Z21kOmRhdGU+CiAgICAgICAgICAgIDxnbWQ6Q0lfRGF0ZT4KICAgICAgICAgICAgICA8Z21kOmRhdGU+CiAgICAgICAgICAgICAgICA8Z2NvOkRhdGUgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+MjAxNS0wMy0wMTwvZ2NvOkRhdGU+CiAgICAgICAgICAgICAgPC9nbWQ6ZGF0ZT4KICAgICAgICAgICAgICA8Z21kOmRhdGVUeXBlPgogICAgICAgICAgICAgICAgPGdtZDpDSV9EYXRlVHlwZUNvZGUgY29kZUxpc3RWYWx1ZT0icmV2aXNpb24iIGNvZGVMaXN0PSJodHRwOi8vd3d3Lm5nZGMubm9hYS5nb3YvbWV0YWRhdGEvcHVibGlzaGVkL3hzZC9zY2hlbWEvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjQ0lfRGF0ZVR5cGVDb2RlIj5yZXZpc2lvbjwvZ21kOkNJX0RhdGVUeXBlQ29kZT4KICAgICAgICAgICAgICA8L2dtZDpkYXRlVHlwZT4KICAgICAgICAgICAgPC9nbWQ6Q0lfRGF0ZT4KICAgICAgICAgIDwvZ21kOmRhdGU+CiAgICAgICAgICA8Z21kOmRhdGU+CiAgICAgICAgICAgIDxnbWQ6Q0lfRGF0ZT4KICAgICAgICAgICAgICA8Z21kOmRhdGU+CiAgICAgICAgICAgICAgICA8Z2NvOkRhdGUgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyI+MTk5NS0wNC0yNDwvZ2NvOkRhdGU+CiAgICAgICAgICAgICAgPC9nbWQ6ZGF0ZT4KICAgICAgICAgICAgICA8Z21kOmRhdGVUeXBlPgogICAgICAgICAgICAgICAgPGdtZDpDSV9EYXRlVHlwZUNvZGUgY29kZUxpc3RWYWx1ZT0icHVibGljYXRpb24iIGNvZGVMaXN0PSJodHRwOi8vd3d3Lm5nZGMubm9hYS5nb3YvbWV0YWRhdGEvcHVibGlzaGVkL3hzZC9zY2hlbWEvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjQ0lfRGF0ZVR5cGVDb2RlIj5wdWJsaWNhdGlvbjwvZ21kOkNJX0RhdGVUeXBlQ29kZT4KICAgICAgICAgICAgICA8L2dtZDpkYXRlVHlwZT4KICAgICAgICAgICAgPC9nbWQ6Q0lfRGF0ZT4KICAgICAgICAgIDwvZ21kOmRhdGU+CiAgICAgICAgICA8Z21kOmVkaXRpb24+CiAgICAgICAgICAgIDxnY286Q2hhcmFjdGVyU3RyaW5nIHhtbG5zOmdjbz0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nY28iPjguMTwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgIDwvZ21kOmVkaXRpb24+CiAgICAgICAgICA8Z21kOmNpdGVkUmVzcG9uc2libGVQYXJ0eSB4bGluazp0aXRsZT0iR0NNRCBVc2VyIFN1cHBvcnQgT2ZmaWNlIj4KICAgICAgICAgICAgPGdtZDpDSV9SZXNwb25zaWJsZVBhcnR5IHhzaTpzY2hlbWFMb2NhdGlvbj0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nbWQgaHR0cDovL3d3dy5uZ2RjLm5vYWEuZ292L21ldGFkYXRhL3B1Ymxpc2hlZC94c2Qvc2NoZW1hLnhzZCIgdXVpZD0iODI5NEJFRTA4QjExMzU5RkUwNDBBQzhDNUFCNDYwRDEiPgogICAgICAgICAgICAgIDxnbWQ6b3JnYW5pc2F0aW9uTmFtZT4KICAgICAgICAgICAgICAgIDxnY286Q2hhcmFjdGVyU3RyaW5nIHhtbG5zOmdjbz0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nY28iPk5BU0E8L2djbzpDaGFyYWN0ZXJTdHJpbmc+CiAgICAgICAgICAgICAgPC9nbWQ6b3JnYW5pc2F0aW9uTmFtZT4KICAgICAgICAgICAgICA8Z21kOnBvc2l0aW9uTmFtZT4KICAgICAgICAgICAgICAgIDxnY286Q2hhcmFjdGVyU3RyaW5nIHhtbG5zOmdjbz0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nY28iPkdDTUQgVXNlciBTdXBwb3J0IE9mZmljZTwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgICAgICA8L2dtZDpwb3NpdGlvbk5hbWU+CiAgICAgICAgICAgICAgPGdtZDpjb250YWN0SW5mbz4KICAgICAgICAgICAgICAgIDxnbWQ6Q0lfQ29udGFjdD4KICAgICAgICAgICAgICAgICAgPGdtZDphZGRyZXNzPgogICAgICAgICAgICAgICAgICAgIDxnbWQ6Q0lfQWRkcmVzcz4KICAgICAgICAgICAgICAgICAgICAgIDxnbWQ6ZWxlY3Ryb25pY01haWxBZGRyZXNzPgogICAgICAgICAgICAgICAgICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5nY21kdXNvQGdjbWQuZ3NmYy5uYXNhLmdvdjwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgICAgICAgICAgICAgIDwvZ21kOmVsZWN0cm9uaWNNYWlsQWRkcmVzcz4KICAgICAgICAgICAgICAgICAgICA8L2dtZDpDSV9BZGRyZXNzPgogICAgICAgICAgICAgICAgICA8L2dtZDphZGRyZXNzPgogICAgICAgICAgICAgICAgICA8Z21kOm9ubGluZVJlc291cmNlPgogICAgICAgICAgICAgICAgICAgIDxnbWQ6Q0lfT25saW5lUmVzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgICA8Z21kOmxpbmthZ2U+CiAgICAgICAgICAgICAgICAgICAgICAgIDxnbWQ6VVJMPmh0dHA6Ly9nY21kLm5hc2EuZ292L01haWxDb21tZW50cy9NYWlsQ29tbWVudHMuanNmP3JjcHQ9Z2NtZHVzbzwvZ21kOlVSTD4KICAgICAgICAgICAgICAgICAgICAgIDwvZ21kOmxpbmthZ2U+CiAgICAgICAgICAgICAgICAgICAgICA8Z21kOm5hbWU+CiAgICAgICAgICAgICAgICAgICAgICAgIDxnY286Q2hhcmFjdGVyU3RyaW5nIHhtbG5zOmdjbz0iaHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nY28iPkdDTUQgRmVlZGJhY2sgRm9ybTwvZ2NvOkNoYXJhY3RlclN0cmluZz4KICAgICAgICAgICAgICAgICAgICAgIDwvZ21kOm5hbWU+CiAgICAgICAgICAgICAgICAgICAgICA8Z21kOmRlc2NyaXB0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICA8Z2NvOkNoYXJhY3RlclN0cmluZyB4bWxuczpnY289Imh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ2NvIj5IYXZlIGEgQ29tbWVudCBmb3IgdGhlIEdDTUQ\"
  ],
  "stagedDate": 1518210398245
}