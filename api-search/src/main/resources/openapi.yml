openapi: '3.0.0'
info:
  title: OneStop Search API
  description: >-
    Search Collections and Granules!
  version: 2.0.0
tags:
  - name: collection
    description: Discover available collections of data.
  - name: granule
    description: Discover available files of data.
paths:
  /collection:
    post:
      tags:
        - collection
      summary: Retrieve collection metadata
      description: >-
        Retrietve collection metadata records matching the text query string,
        spatial, and/or temporal filter.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/requestBody"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    requestBody:
      description: >-
        The shape of a search request body that can be sent to the OneStop API to execute a search against available metadata.
      type: object
      additionalProperties: false
      example: {"queries":[{"type":"queryText","value":"climate"}],"filters":[],"facets":true,"page":{"max":20,"offset":0}}
      properties:
        queries:
          type: array
          oneOf:
            - $ref: '#/components/schemas/textQuery'
        filters:
          description: filters applied to the search
          type: array
          oneOf:
            - $ref: '#/components/schemas/dateTimeFilter'
            - $ref: '#/components/schemas/facetFilter'
            - $ref: '#/components/schemas/geometryFilter'
            - $ref: '#/components/schemas/collectionFilter'
            - $ref: '#/components/schemas/excludeGlobalFilter'
        facets:
          description: 'Flag to request counts of results by GCMD keywords in addition to results. Defaults to false if not provided.'
          type: boolean
        summary:
          description: 'Flag to request summary of search results instead of full set of attributes. Defaults to true if not provided.'
          type: boolean
        page:
          $ref: '#/components/schemas/page'
    page:
      description: Pagination of results
      type: object
      properties:
        max:
          description: 'Maximum number of results returned. If the page object is not provided, this defaults to 10.'
          type: integer
        offset:
          description: 'Number of records by which to offset results. If the page object is not provided, this defaults to 0.'
          type: integer
      required:
        - max
        - offset
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    textQuery:
      type: object
      description: Text query to search with that is valid so long as it does not have a leading wildcard ('*' or '?')
      properties:
        type:
          enum:
            - queryText
        value:
          type: string
          pattern: '^(?!\s*[\*\?]+).*'
      required:
        - type
        - value
      additionalProperties: false
    filter:
      oneOf:
        - $ref: '#/components/schemas/dateTimeFilter'
        - $ref: '#/components/schemas/facetFilter'
        - $ref: '#/components/schemas/geometryFilter'
        - $ref: '#/components/schemas/collectionFilter'
        - $ref: '#/components/schemas/excludeGlobalFilter'
    excludeGlobalFilter:
      description: Flag to request that geospatially global results be excluded. Defaults to false if not provided.
      type: object
      properties:
        type:
          enum:
            - excludeGlobal
        value:
          type: boolean
      required:
        - type
        - value
      additionalProperties: false
    dateTimeFilter:
      type: object
      properties:
        type:
          enum:
            - datetime
        before:
          type: string
          format: date-time
        after:
          type: string
          format: date-time
      required:
        - type
      additionalProperties: false
    facetFilter:
      description: Filters results based on given GCMD keywords where returned results MUST have the specified keyword. Multiple facetFilter objects will be combined with logical AND; multiple values in a single facetFilter object will be combined with the logical OR.
      type: object
      properties:
        type:
          enum:
            - facet
        name:
          description: 'One of the GCMD keyword categories: science, services, instruments, platforms, projects, dataCenters, horizontalResolution, verticalResolution, temporalResolution.'
          type: string
          enum:
            - science
            - services
            - instruments
            - platforms
            - projects
            - dataCenters
            - horizontalResolution
            - verticalResolution
            - temporalResolution
        values:
          description: 'Exact match GCMD keyword(s), e.g., "Atmosphere > Atmospheric Temperature > Surface Temperature"'
          type: array
          items:
            type: string
      required:
        - type
        - name
        - values
      additionalProperties: false
    collectionFilter:
      description: 'Collections to filter results by (logical OR if multiple filters or multiple values in one filter). If any collection filters are provided, granules are returned.'
      type: object
      properties:
        type:
          enum:
            - collection
        values:
          type: array
          items:
            type: string
      required:
        - type
        - values
      additionalProperties: false
    geometryFilter:
      description: Filter that returns results whose bounding geometry contains the specified geographical coordinate.
      type: object
      properties:
        type:
          enum:
            - geometry
        geometry:
          $ref: '#/components/schemas/Geometry'
        relation:
          description: 'How the dataset geometry relates to the given geometry, e.g., return all datasets whose geometry contains the given point. Defaults to ''intersects''.'
          enum:
            - contains
            - disjoint
            - intersects
            - within
      required:
        - type
        - geometry
      additionalProperties: false
    Geometry:
      description: One geometry as defined by GeoJSON
      oneOf:
        - $ref: '#/components/schemas/Point'
        - $ref: '#/components/schemas/MultiPoint'
        - $ref: '#/components/schemas/LineString'
        - $ref: '#/components/schemas/MultiLineString'
        - $ref: '#/components/schemas/Polygon'
        - $ref: '#/components/schemas/MultiPolygon'
    Point:
      type: object
      properties:
        type:
          enum:
            - Point
        coordinates:
          $ref: '#/components/schemas/position'
      required:
        - type
        - coordinates
    MultiPoint:
      properties:
        type:
          enum:
            - MultiPoint
        coordinates:
          $ref: '#/components/schemas/positionArray'
      required:
        - type
        - coordinates
    LineString:
      properties:
        type:
          enum:
            - LineString
        coordinates:
          $ref: '#/components/schemas/lineString'
      required:
        - type
        - coordinates
    MultiLineString:
      properties:
        type:
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/lineString'
      required:
        - type
        - coordinates
    Polygon:
      properties:
        type:
          enum:
            - Polygon
        coordinates:
          $ref: '#/components/schemas/polygon'
      required:
        - type
        - coordinates
    MultiPolygon:
      properties:
        type:
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/polygon'
      required:
        - type
        - coordinates
    lat:
      description: a coordinate value
      type: number
      minimum: -360
      maximum: 360
    long:
      description: a coordinate value
      type: number
      minimum: -90
      maximum: 90
    position:
      description: A single position
      type: array
      minItems: 2
      maxItems: 2
      oneOf:
        - $ref: "#/components/schemas/lat"
        - $ref: "#/components/schemas/long"
    positionArray:
      description: An array of positions
      type: array
      items:
        $ref: '#/components/schemas/position'
    lineString:
      description: An array of two or more positions
      allOf:
        - $ref: '#/components/schemas/positionArray'
        - minItems: 2
    linearRing:
      description: An array of four positions where the first equals the last
      allOf:
        - $ref: '#/components/schemas/positionArray'
        - minItems: 4
    polygon:
      description: An array of linear rings
      type: array
      items:
        $ref: '#/components/schemas/linearRing'
