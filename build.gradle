buildscript {
  ext {
    spockVersion = '1.1-groovy-2.4'
  }
  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath 'com.gradle:build-scan-plugin:1.11'
    classpath "gradle.plugin.org.cedar:dockerplugin:1.0.2"
    classpath 'org.owasp:dependency-check-gradle:3.3.4'
  }
}

apply plugin: 'org.owasp.dependencycheck'
dependencyCheck {
  skipConfigurations = ["providedRuntime"]
  suppressionFile = "${rootDir}/owasp-suppressions.xml"
  failBuildOnCVSS = 4

  // One of our dependencies has an un-parsable pom which causes dependency-checker
  // to throw an exception. However, the checks still run and it still generates a
  // report, so I think it's safe(ish) to ignore the error.
  failOnError = false
}
task('check').dependsOn('dependencyCheckAggregate')
task('build').dependsOn('check')

group = 'org.cedar.psi'

subprojects {
  group = rootProject.group
  version = rootProject.version

  afterEvaluate {
    repositories {
      mavenCentral()
      maven { url "https://repo.spring.io/milestone" }
      maven { url 'https://packages.confluent.io/maven/' }
    }

    if (project.plugins.hasPlugin('org.cedar.dockerplugin')) {
      docker {
        username = System.getenv('DOCKER_USER')
        password = System.getenv('DOCKER_PASSWORD')
      }
    }
  }
}

subprojects {
  apply plugin: 'jacoco'

  afterEvaluate {
    jacocoTestReport {
      executionData fileTree(projectDir).include("build/jacoco/*.exec")

      reports {
        xml.enabled true
        xml.destination = file("${buildDir}/reports/jacoco/report.xml")
        html.enabled true
        html.destination = file("${buildDir}/reports/jacoco/html")
      }
    }
    check.dependsOn jacocoTestReport
  }
}
