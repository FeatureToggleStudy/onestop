buildscript {
  ext {
    springBootVersion = '1.5.1.RELEASE'
  }
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath 'com.gradle:build-scan-plugin:1.0'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1'
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath 'com.wiredforcode:gradle-spawn-plugin:0.6.0'
    classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
    classpath 'org.owasp:dependency-check-gradle:1.4.5'
  }
}

ext {
  esVersion = '5.5.3'
}

subprojects {
  project.ext {
    esVersion = "${project.esVersion}"
    groovyVersion = '2.4.12'
    spockVersion = '1.1-groovy-2.4'
  }

  afterEvaluate {
    if (project.plugins.hasPlugin('java')) {
      project.apply plugin: 'org.owasp.dependencycheck'

//      Not functioning in travis, disconnecting temporarily to move forward
//      project.tasks.findByName('check').dependsOn('dependencyCheck')

      dependencyCheck {
        suppressionFile = "${rootDir}/owasp-suppressions.xml"
        failBuildOnCVSS = 4

        // One of our dependencies has an un-parsable pom which causes dependency-checker
        // to throw an exception. However, the checks still run and it still generates a
        // report, so I think it's safe(ish) to ignore the error.
        failOnError = false
      }
    }
  }
}

task promote(type: Exec, description: 'Promotes artifactory snapshot', group: 'publish') {
  executable "bash"
  args "-c", "curl -X POST -u \"\$BINTRAY_USER:\$BINTRAY_KEY\" -H \"Content-Length: 0\"\
    \"http://oss.jfrog.org/api/plugins/build/promote/snapshotsToBintray/${rootProject.name}/\$TRAVIS_BUILD_NUMBER?params=releaseVersion=$version\""
}

apply plugin: 'com.gradle.build-scan'

group = 'org.cedar.onestop'

subprojects.each {
  it.group = group
  it.version = version
}

buildScan {
  licenseAgreementUrl = 'https://gradle.com/terms-of-service'
  licenseAgree = 'yes'
}

task dockerComposeUp(type: Exec, description: 'Runs the entire system in docker containers.', group: 'docker', dependsOn: [":api-search:build", ":api-metadata:build", ":client:build"]) {
    executable "bash"
    args "-c", "ES_VERSION=$project.esVersion docker-compose up -d"
}

task dockerComposeDown(type: Exec, description: 'Stops the entire system in docker containers.', group: 'docker') {
  executable "bash"
  args "-c", "docker-compose down"
}
