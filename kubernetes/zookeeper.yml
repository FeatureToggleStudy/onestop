---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-headless
  labels:
    app: zookeeper
    tier: backend
    devmode: "true"
spec:
  selector:
    app: zookeeper
  clusterIP: None
  ports:
    - name: server
      port: 2888
      targetPort: server
    - name: leader-election
      port: 3888
      targetPort: leader-election
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
    tier: backend
    devmode: "true"
spec:
  selector:
    app: zookeeper
  ports:
    - name: client
      port: 2181
      targetPort: client
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper-sts
  labels:
    app: zookeeper
    tier: backend
    devmode: "true"
spec:
  selector:
    matchLabels:
      app: zookeeper
  serviceName: zookeeper-headless
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - zookeeper
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:4.1.1
          imagePullPolicy: Always
          ports:
            - name: server
              containerPort: 2888
            - name: leader-election
              containerPort: 3888
            - name: client
              containerPort: 2181
          volumeMounts:
            - name: data
              mountPath: /var/lib/zookeeper/data
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
              # NOTE: this is clearly hard-coded for 3 replicas... probably need to write a fancy setup script to handle arbitrary replicas?
            - name: ZOOKEEPER_SERVERS
              value: "zookeeper-sts-0.zookeeper-headless:2888:3888;zookeeper-sts-1.zookeeper-headless:2888:3888;zookeeper-sts-2.zookeeper-headless:2888:3888"
            - name: ZOOKEEPER_QUORUM_LISTEN_ON_ALL_IPS
              value: "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command:
            - "/bin/sh"
            - "-c"
            - "export ZOOKEEPER_SERVER_ID=$(expr ${POD_NAME##*-} + 1) && /etc/confluent/docker/run"
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - '[ "imok" = "$(echo ruok | nc -w 1 -q 1 127.0.0.1 2181)" ]'
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - '[ "imok" = "$(echo ruok | nc -w 1 -q 1 127.0.0.1 2181)" ]'
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

