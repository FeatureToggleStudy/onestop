import com.wiredforcode.gradle.spawn.SpawnProcessTask
import com.wiredforcode.gradle.spawn.KillProcessTask

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath 'com.wiredforcode:gradle-spawn-plugin:0.6.0'
  }
}

apply plugin: 'com.wiredforcode.spawn'

task installElasticSearch(type: DownloadTask) {
  url = "https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/${project.esVersion}/elasticsearch-${project.esVersion}.tar.gz"
  targetDir = "${buildDir}/elasticsearch"

  finalizedBy 'extractElasticSearch'
}

task extractElasticSearch(type: Copy) {
  from tarTree(installElasticSearch.targetFile)
  into installElasticSearch.targetFile.parentFile

  finalizedBy 'installDeleteByQueryPlugin'
}

task installDeleteByQueryPlugin(type: Exec) {
  onlyIf { !(new File("${buildDir}/elasticsearch/elasticsearch-${project.esVersion}/plugins/delete-by-query").exists()) }

  workingDir "${buildDir}/elasticsearch/elasticsearch-${project.esVersion}/bin"
  commandLine './plugin', 'install', 'delete-by-query'
}

task start(type: SpawnProcessTask) {
  dependsOn 'installElasticSearch'
  onlyIf { !(new File(projectDir, '.pid.lock').exists()) }

  directory projectDir.absolutePath
  command "${buildDir}/elasticsearch/elasticsearch-${project.esVersion}/bin/elasticsearch"
  ready 'started'
}

task stop(type: KillProcessTask) {
  onlyIf { new File(projectDir, '.pid.lock').exists() }
  directory projectDir.absolutePath
}
