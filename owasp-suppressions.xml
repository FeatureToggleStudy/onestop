<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.2.xsd">

  <suppress>
    <notes><![CDATA[
      According to pivotal security reports, one mitigation to this vulnerability is to have upgraded at least
      Spring Boot 2.0.x RC1, and we are on the 2.0.1 RC1 release train.
      ]]></notes>
    <filePath regex="true">.*spring-boot-.*\.jar</filePath>
    <cve>CVE-2018-1196</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[
      Refers to a vulnerability in FasterXML jackson-databind which has been solved as of version 2.8.11.1.
      The latest version used is 2.9.3. The vulnerability is thus a false positive; further, the special conditions
      under which this vulnerability can be exposed is well-documented.
      ]]></notes>
    <filePath regex="true">.*jackson-databind-.*\.jar</filePath>
    <cve>CVE-2017-17485</cve>
    <cve>CVE-2018-5968</cve>
    <cve>CVE-2018-7489</cve>
  </suppress>

  <suppress until="2019-07-15Z">
    <notes><![CDATA[
      Temporary suppression until version 2.9.9.1 (or 2.9.10?) becomes available. See the following issues on GitHub:
      https://github.com/FasterXML/jackson-databind/issues/2371, https://github.com/FasterXML/jackson-databind/issues/2341
      ]]></notes>
    <filePath regex="true">.*jackson-databind-.*\.jar</filePath>
    <cve>CVE-2019-12814</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[
      Refers to a Groovy LDAP class which is not in use in this application
      ]]></notes>
    <filePath regex="true">.*\bgroovy-.*\.jar</filePath>
    <cve>CVE-2016-6497</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[
      Applies to spring framework versions 4.3.0 - 4.3.4, which are not in use in this application
    ]]></notes>
    <gav regex="true">^org\.springframework\.cloud:spring-cloud-context:.*$</gav>
    <cve>CVE-2016-9878</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[
   file name: validation-api-1.1.0.Final.jar
   ]]></notes>
    <gav regex="true">^javax\.validation:validation-api:.*$</gav>
    <cve>CVE-2013-4499</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[
      file name: zookeeper-3.4.13.jar
      The CVE (https://nvd.nist.gov/vuln/detail/CVE-2018-8012) explicitly states that it only applies to
      versions of zookeeper prior to 3.4.10. We're currently using 3.4.13.
    ]]></notes>
    <gav regex="true">^org\.apache\.zookeeper:zookeeper:3\.4\.[1-9][0-9]+$</gav>
    <cve>CVE-2018-8012</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[
      file name: xz-1.5.jar
      This CVE (https://nvd.nist.gov/vuln/detail/CVE-2015-4035) refers to a script which is included in the
      xzgrep command line tool. That script is not included in this jar, which is used to compress avro messages.
    ]]></notes>
    <cve>CVE-2015-4035</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[
      file name: avro-1.8.2.jar (shaded: com.google.guava:guava:11.0.2)
      This vulnerability refers to an unbounded allocation that can occur during the deserialization of several specific
      classes provided by the Guava library. Howver, the only usage of Guava in this project is as a shaded dependency
      within the avro jar, and only the specific classes in use by avro have been shaded into it. Those shaded dependencies
      include neither AtomicDoubleArray nor CompoundOrdering_CustomFieldSerializer, the two classes containing the
      vulnerability (see the fix implemented later in Guava: https://github.com/google/guava/commit/7ec8718f1e6e2814dabaa4b9f96b6b33a813101c)

      In short, this vulnerability *as flagged due to avro-1.8.2.jar* is not present in this project.
    ]]></notes>
    <sha1>906d56dcbd43343b6ca42188ae18ba98dc6c2fdf</sha1>
    <cve>CVE-2018-10237</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[ file name: slf4j-api-1.7.25.jar
      The CVE (https://nvd.nist.gov/vuln/detail/CVE-2018-8088) explicitly states that it only applies to
      org.slf4j.ext.EventData in the slf4j-ext module in QOS.CH SLF4J.

      slf4j-ext is not used by this project. also this CVE does not apply to slf4j-api project.
    ]]></notes>
    <gav regex="true">^org\.slf4j:slf4j-api:.*$</gav>
    <cve>CVE-2018-8088</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[ file name: jul-to-slf4j-1.7.25.jar
      The CVE (https://nvd.nist.gov/vuln/detail/CVE-2018-8088) explicitly states that it only applies to
      org.slf4j.ext.EventData in the slf4j-ext module in QOS.CH SLF4J, which is not used by this project.

      this vulnerability does not apply to jul-to-slf4j projects.
    ]]></notes>
    <gav regex="true">^org\.slf4j:jul-to-slf4j:.*$</gav>
    <cve>CVE-2018-8088</cve>
  </suppress>

  <suppress>
    <notes><![CDATA[
      The CVE (https://nvd.nist.gov/vuln/detail/CVE-2018-1258) explicitly states that this vulnerability applies to
      Spring Framework version 5.0.5, and as of this suppression, the Spring Boot 2.1.6.RELEASE version (corresponding
      to Spring Framework version 5.1.x) is being used, so this CVE can be suppressed.
    ]]></notes>
      <gav regex="true">^org.springframework.security:spring-security.*$</gav>
      <cve>CVE-2018-1258</cve>
  </suppress>

</suppressions>
