package org.cedar.onestop.api.metadata.serviceimport groovy.json.JsonSlurperimport groovy.util.logging.Slf4jimport org.springframework.beans.factory.annotation.Valueimport org.springframework.kafka.annotation.KafkaListenerimport org.springframework.messaging.handler.annotation.Payloadimport org.springframework.stereotype.Service@Slf4j@Serviceclass KafkaConsumerService {    @Value('${kafka.topic.PARSED_COLLECTIONS_TOPIC}')  private String parsedCollectionTopic  @KafkaListener(topics = '${kafka.topic.PARSED_COLLECTIONS_TOPIC}')  void listen(@Payload String message) {    log.info("consuming message from a topic ...")    try {      def slurper = new JsonSlurper()      def msgs = slurper.parseText(message) as Map      def results = validateMessage(msgs)    } catch (Exception e) {      log.error("Unexpected error", e)    }      }    static String validateMessage(Map msgs) {    def analysis = msgs.analysis as Map    def results = [:]    def title = analysis.titles['title'] as Map    def fileIdentifier = analysis.identification['fileIdentifier'] as Map        if (!title.exists || !fileIdentifier.exists) {      log.error("message is not valid: title: ${title.exists} and fileIdentifier: ${fileIdentifier.exists}")    } else {      results = msgs.discovery as String      log.error("Valid message: ${results}")    }    return results  }  }