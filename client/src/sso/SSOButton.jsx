import React from 'react'
import Button from '../common/input/Button'
import lockIcon from 'fa/lock.svg'

const styleButton = {maxWidth: "fit-content", alignSelf: "flex-end", fontSize: "1em", marginLeft: "1em", padding: "0.309em 0.618em 0.309em 0.309em"}

const styleButtonIcon = {marginRight: "0.309em", width: "1.618em", height: "1.618em"}

export default class SSOButton extends React.Component {

  // login = () => {
  //   let xhr = new XMLHttpRequest();
  //   xhr.open("POST", '/server', true);
  //
  //   //Send the proper header information along with the request
  //   xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  //
  //   xhr.onload = function () {
  //     console.log(this.responseText)
  //   }
  //
  //   //
  //   // xhr.onreadystatechange = function() {//Call a function when the state changes.
  //   //   if(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
  //   //     // Request finished. Do processing here.
  //   //
  //   //   }
  //   //   xhr.send(`SAMLRequest=${samlRequest}&RelayState=${relayState}");
  // }

  render() {

    const samlRequest = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHNhbWwycDpBdXRoblJlcXVlc3QgQXNzZXJ0aW9uQ29uc3VtZXJTZXJ2aWNlVVJMPSJodHRwczovL3NjaWFwcHMuY29sb3JhZG8uZWR1L1NBTUwyL1BPU1QiIERlc3RpbmF0aW9uPSJodHRwczovL3Nzby1kZXYubGIuY3NwLm5vYWEuZ292OjQ0My9vcGVuYW0vU1NPUE9TVC9tZXRhQWxpYXMvbm9hYS1vbmxpbmUvbm9hYS1vbmxpbmUtaWRwIiBJRD0iU0NJQVBQU19hMjJmMDM3OS0yOGFhLTRmOTAtYTMyNi1hNDQ1ZjdjNWYzNWEiIElzc3VlSW5zdGFudD0iMjAxOC0wNS0wOFQxOTozMjoxOS43OTFaIiBQcm90b2NvbEJpbmRpbmc9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpiaW5kaW5nczpIVFRQLVBPU1QiIFZlcnNpb249IjIuMCIgeG1sbnM6c2FtbDJwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiPjxzYW1sMjpJc3N1ZXIgeG1sbnM6c2FtbDI9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPmh0dHBzOi8vc2NpYXBwcy5jb2xvcmFkby5lZHUvc3A8L3NhbWwyOklzc3Vlcj48ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KPGRzOlNpZ25lZEluZm8+CjxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CjxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjcnNhLXNoYTEiLz4KPGRzOlJlZmVyZW5jZSBVUkk9IiNTQ0lBUFBTX2EyMmYwMzc5LTI4YWEtNGY5MC1hMzI2LWE0NDVmN2M1ZjM1YSI+CjxkczpUcmFuc2Zvcm1zPgo8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgo8L2RzOlRyYW5zZm9ybXM+CjxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KPGRzOkRpZ2VzdFZhbHVlPjVxNmg3Z0JQeVlIVk9VMlJsZHMxWjVwNUQvQTI4TGtSRGpubG8xUk50ejg9PC9kczpEaWdlc3RWYWx1ZT4KPC9kczpSZWZlcmVuY2U+CjwvZHM6U2lnbmVkSW5mbz4KPGRzOlNpZ25hdHVyZVZhbHVlPgp1NnoxZGhrUFlFSExVL2VFbGQ3b0ErY1lsTWgrcTJwT292bVNKWkQwSlZEenBERXlzTjZZbmpoWThNMmZXS3ZCTGMxT3hKeUJjaDdaCkE4QmZ6SGY4NkRwdjZCelUvK1BJRUJFWjVZS3BVS1pMcnpWWEtwY3phWXI1ejJCTU81TitqT1NnUUtVcVJscThmWjdaVUw3LzEzbS8KZjB5YTFXN0hCb0tTWEozWEd3ZjFESzFESlR5R3piaGpmVnpTaXpwWUtVM2Y4STNmZGN6RmhOMk9odG5NZE50Y3Q1dFU2SXhtTU5aVwprOGlHNGdEL3FPV0RqWkJuRlR4NXlGWUNLV3BkQVErRDRVQjVXL1dwNFcyNVhlT01hRG42R0lmWjFZM0Mrc0hWN0ZlMTJQL1hmR1BVCnJEZjdpdDFnUnZodjY2cDhEUFFzU2xTbkt5RTBFTWtoZml6aE9BPT0KPC9kczpTaWduYXR1cmVWYWx1ZT4KPGRzOktleUluZm8+PGRzOlg1MDlEYXRhPjxkczpYNTA5Q2VydGlmaWNhdGU+TUlJR0RUQ0NCUFdnQXdJQkFnSVFkN2NvSS95MzVZZXZzdzYvbE9SSWl6QU5CZ2txaGtpRzl3MEJBUXNGQURDQmxqRUxNQWtHQTFVRUJoTUNSMEl4R3pBWkJnTlZCQWdURWtkeVpXRjBaWElnVFdGdVkyaGxjM1JsY2pFUU1BNEdBMVVFQnhNSFUyRnNabTl5WkRFYU1CZ0dBMVVFQ2hNUlEwOU5UMFJQSUVOQklFeHBiV2wwWldReFBEQTZCZ05WQkFNVE0wTlBUVTlFVHlCU1UwRWdUM0puWVc1cGVtRjBhVzl1SUZaaGJHbGtZWFJwYjI0Z1UyVmpkWEpsSUZObGNuWmxjaUJEUVRBZUZ3MHhOakEzTVRRd01EQXdNREJhRncweE9UQTNNVFF5TXpVNU5UbGFNSUh4TVFzd0NRWURWUVFHRXdKVlV6RU9NQXdHQTFVRUVSTUZPREF6TURreEN6QUpCZ05WQkFnVEFrTlBNUkF3RGdZRFZRUUhFd2RDYjNWc1pHVnlNUkF3RGdZRFZRUUpFd2MwTlRVZ1ZVTkNNU293S0FZRFZRUUtFeUZWYm1sMlpYSnphWFI1SUc5bUlFTnZiRzl5WVdSdklHRjBJRUp2ZFd4a1pYSXhEakFNQmdOVkJBc1RCVU5KVWtWVE1UUXdNZ1lEVlFRTEV5dEliM04wWldRZ1lua2dWVzVwZG1WeWMybDBlU0J2WmlCRGIyeHZjbUZrYnlCaGRDQkNiM1ZzWkdWeU1SQXdEZ1lEVlFRTEV3ZFRSME1nVTFOTU1SMHdHd1lEVlFRREV4UnpZMmxoY0hCekxtTnZiRzl5WVdSdkxtVmtkVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNOVJzbXErVDhFQ3ZOWWdGNXNOZUFjZTArQVJpdndUSXczSUNwZ0hGN2hoNktnYW9XMklIbkIrMjBvMlpMN1dGZm1WaGhCb3YxWmRaekt3YmE2N1hnSGoxRm1ZK0F1WlpPZ2ZpeHlvVnhEQ1FvRWZMT0xPQnI5VHMrK05qUGpjaVRYZS80a2x2cCs5dEJqSm5FQUJxamlnSU01LzZobUpxMDRNaE51L1BWMDZQS0N1KzVJRk1aQ21KUjhuc3ZLcUlZS3BYaDNEWTVjT3graXgwVzRCNEJjVWpTMFJuVXpkQ3BLQ3lHalJWTE1zVmpoRmRaeGhsdmhLcS9xZGYwZ1N2V2R5b0hjbWlUaHVFeW54MzRpRHFIdU50aG5MRDZ6ZHBPOVRHcWs3TEx6bXEvNDdrblB5OWJrSk91bGhaR3lNSE02SHNIY3pUNThkZm9JNm91MFpIenNDQXdFQUFhT0NBZmd3Z2dIME1COEdBMVVkSXdRWU1CYUFGSnJ6SzlyUHJVKzJMN3NxU0VncUVyY2JRc0VrTUIwR0ExVWREZ1FXQkJUS2RlR0VtdWNiYmlXTVFhOHNXOG5kQWU2Mm1UQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd1VBWURWUjBnQkVrd1J6QTdCZ3dyQmdFRUFiSXhBUUlCQXdRd0t6QXBCZ2dyQmdFRkJRY0NBUllkYUhSMGNITTZMeTl6WldOMWNtVXVZMjl0YjJSdkxtTnZiUzlEVUZNd0NBWUdaNEVNQVFJQ01Gb0dBMVVkSHdSVE1GRXdUNkJOb0V1R1NXaDBkSEE2THk5amNtd3VZMjl0YjJSdlkyRXVZMjl0TDBOUFRVOUVUMUpUUVU5eVoyRnVhWHBoZEdsdmJsWmhiR2xrWVhScGIyNVRaV04xY21WVFpYSjJaWEpEUVM1amNtd3dnWXNHQ0NzR0FRVUZCd0VCQkg4d2ZUQlZCZ2dyQmdFRkJRY3dBb1pKYUhSMGNEb3ZMMk55ZEM1amIyMXZaRzlqWVM1amIyMHZRMDlOVDBSUFVsTkJUM0puWVc1cGVtRjBhVzl1Vm1Gc2FXUmhkR2x2YmxObFkzVnlaVk5sY25abGNrTkJMbU55ZERBa0JnZ3JCZ0VGQlFjd0FZWVlhSFIwY0RvdkwyOWpjM0F1WTI5dGIyUnZZMkV1WTI5dE1Ea0dBMVVkRVFReU1EQ0NGSE5qYVdGd2NITXVZMjlzYjNKaFpHOHVaV1IxZ2hoM2QzY3VjMk5wWVhCd2N5NWpiMnh2Y21Ga2J5NWxaSFV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlVczlIZVh4eHE0d2hUNFVkWXAyQVdFZ1Y2bExPVm84RjBGeGlSTENIbVhHQ3ptaHlFTHBPcFdhNDdERlhUcXU1Wi9EZExHcU02U2IrcXBCNGQyMThSb3dnVlVmV0txdTVFSFR6a2l5VmZaN1I3M1BDZzNvcnExWm50M2tlcHRzMjEyYk13ODhab2xydXRHYlBTTVRnNG10NkFIcWpFZ0ZrWFZLVE5sTFlPbU5vRmJRbFVsbkg4NmtuSDYyTUpOWDBJWld3NFhUZytmUUVoT3dRQjhydFI1cERJSVc1UWlwRklrR3dTM1VXdm1rUVdjRWo4b2xDYmdNWVRkSTNEK1U2VFJHVG9CYnA2TCt6NVQ3WVEwQlY1L1pZNEtqeUVxakRQZk5jTnVlZ2ZOWWxSQjRqNlA4Ty9qYjZ4U2UxYmUyK1NBeTgrYnBMRzJoY250Z3Vyb2Fzcz08L2RzOlg1MDlDZXJ0aWZpY2F0ZT48L2RzOlg1MDlEYXRhPjwvZHM6S2V5SW5mbz48L2RzOlNpZ25hdHVyZT48c2FtbDJwOk5hbWVJRFBvbGljeSBBbGxvd0NyZWF0ZT0idHJ1ZSIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoxLjE6bmFtZWlkLWZvcm1hdDplbWFpbEFkZHJlc3MiIFNQTmFtZVF1YWxpZmllcj0iaHR0cHM6Ly9zY2lhcHBzLmNvbG9yYWRvLmVkdS9zcCIvPjxzYW1sMnA6UmVxdWVzdGVkQXV0aG5Db250ZXh0IENvbXBhcmlzb249Im1pbmltdW0iPjxzYW1sMjpBdXRobkNvbnRleHRDbGFzc1JlZiB4bWxuczpzYW1sMj0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+dXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFjOmNsYXNzZXM6UGFzc3dvcmRQcm90ZWN0ZWRUcmFuc3BvcnQ8L3NhbWwyOkF1dGhuQ29udGV4dENsYXNzUmVmPjwvc2FtbDJwOlJlcXVlc3RlZEF1dGhuQ29udGV4dD48L3NhbWwycDpBdXRoblJlcXVlc3Q+"
    // const samlRequest = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHNhbWwycDpBdXRoblJlcXVlc3QgQXNzZXJ0aW9uQ29uc3VtZXJTZXJ2aWNlVVJMPSJodHRwczovL3NjaWFwcHMuY29sb3JhZG8uZWR1L1NBTUwyL1BPU1QiIERlc3RpbmF0aW9uPSJodHRwczovL3Nzby1kZXYubGIuY3NwLm5vYWEuZ292OjQ0My9vcGVuYW0vU1NPUE9TVC9tZXRhQWxpYXMvbm9hYS1vbmxpbmUvbm9hYS1vbmxpbmUtaWRwIiBJRD0iU0NJQVBQU18xNjk4OWM3NC0xYWRmLTRjOGMtODc2OC1mNmI3NDM1ZDY2M2IiIElzc3VlSW5zdGFudD0iMjAxOC0wNS0wOFQxODo0Mjo0MC4xNTdaIiBQcm90b2NvbEJpbmRpbmc9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpiaW5kaW5nczpIVFRQLVBPU1QiIFZlcnNpb249IjIuMCIgeG1sbnM6c2FtbDJwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiPjxzYW1sMjpJc3N1ZXIgeG1sbnM6c2FtbDI9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPmh0dHBzOi8vc2NpYXBwcy5jb2xvcmFkby5lZHUvc3A8L3NhbWwyOklzc3Vlcj48ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KPGRzOlNpZ25lZEluZm8+CjxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CjxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjcnNhLXNoYTEiLz4KPGRzOlJlZmVyZW5jZSBVUkk9IiNTQ0lBUFBTXzE2OTg5Yzc0LTFhZGYtNGM4Yy04NzY4LWY2Yjc0MzVkNjYzYiI+CjxkczpUcmFuc2Zvcm1zPgo8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgo8L2RzOlRyYW5zZm9ybXM+CjxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KPGRzOkRpZ2VzdFZhbHVlPlFxazFNUFc0cXpvM2hQMHhKSDlkZW5VbnJpUEFuNTBGMlZnQmJOeG5BMzg9PC9kczpEaWdlc3RWYWx1ZT4KPC9kczpSZWZlcmVuY2U+CjwvZHM6U2lnbmVkSW5mbz4KPGRzOlNpZ25hdHVyZVZhbHVlPgprZittQlZKL1JyTzZCc09rYUxVUFBVU3N2c3VTaUM4YTJZRXBKb1psNnJBejJMbEx4RlVXTEpIZUtTWG90aGNuS1JBd3JuWVExS1BnCjhGUjE1QUJ6NjBERFc4bjZEMW1zeGdtQzBKMllEY2JOZU4vNElpMHpibW83WjFKcWpZWXFMNVkwdHpncEN4ak12T2JwK1BOSXhCWUQKeVdpV2xNN3dXQUUyQVpYY0NzbVdJSjBhRGU2T1ZhWmwwTDBQUnBTNHExUHRtNkMydHhpRk5FM3JOa1dIanlSRjFuMHAvRVVYNGI1Qwp5OW1Xa2xoVEdaT015cFcwK0ZpZjhRMURMNHNYVXYrdXZIZXhVdFVaZjk0ZWFFckFQSzVKTDlyMHBkaTV3Q05iMGhuNnQwZHg0KytPCm1zbldlNDhEb3ZtTTVueDQrVlRuZDhHOHhqMVpMRnJRbjFxVW1nPT0KPC9kczpTaWduYXR1cmVWYWx1ZT4KPGRzOktleUluZm8+PGRzOlg1MDlEYXRhPjxkczpYNTA5Q2VydGlmaWNhdGU+TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6MUd5YXI1UHdRSzgxaUFYbXcxNEJ4N1Q0QkdLL0JNagpEY2dLbUFjWHVHSG9xQnFoYllnZWNIN2JTalprdnRZVitaV0dFR2kvVmwxbk1yQnRycnRlQWVQVVdaajRDNWxrNkIrTEhLaFhFTUpDCmdSOHM0czRHdjFPejc0Mk0rTnlKTmQ3L2lTVytuNzIwR01tY1FBR3FPS0Fnem4vcUdZbXJUZ3lFMjc4OVhUbzhvSzc3a2dVeGtLWWwKSHlleThxb2hncWxlSGNOamx3N0g2TEhSYmdIZ0Z4U05MUkdkVE4wS2tvTElhTkZVc3l4V09FVjFuR0dXK0VxcitwMS9TQks5WjNLZwpkeWFKT0c0VEtmSGZpSU9vZTQyMkdjc1ByTjJrNzFNYXFUc3N2T2FyL2p1U2MvTDF1UWs2NldGa2JJd2N6b2V3ZHpOUG54MStnanFpCjdSa2ZPd0lEQVFBQjwvZHM6WDUwOUNlcnRpZmljYXRlPjwvZHM6WDUwOURhdGE+PC9kczpLZXlJbmZvPjwvZHM6U2lnbmF0dXJlPjxzYW1sMnA6TmFtZUlEUG9saWN5IEFsbG93Q3JlYXRlPSJ0cnVlIiBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMTpuYW1laWQtZm9ybWF0OmVtYWlsQWRkcmVzcyIgU1BOYW1lUXVhbGlmaWVyPSJodHRwczovL3NjaWFwcHMuY29sb3JhZG8uZWR1L3NwIi8+PHNhbWwycDpSZXF1ZXN0ZWRBdXRobkNvbnRleHQgQ29tcGFyaXNvbj0ibWluaW11bSI+PHNhbWwyOkF1dGhuQ29udGV4dENsYXNzUmVmIHhtbG5zOnNhbWwyPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj51cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZFByb3RlY3RlZFRyYW5zcG9ydDwvc2FtbDI6QXV0aG5Db250ZXh0Q2xhc3NSZWY+PC9zYW1sMnA6UmVxdWVzdGVkQXV0aG5Db250ZXh0Pjwvc2FtbDJwOkF1dGhuUmVxdWVzdD4="
    const relayState = ""

    return (
        <form method="post" action="https://sso-dev.lb.csp.noaa.gov:443/openam/SSOPOST/metaAlias/noaa-online/noaa-online-idp">
          <input type="hidden" name="SAMLRequest" value={samlRequest} />
          <input type="hidden" name="RelayState" value={relayState} />
          <input type="submit" value="SSO" />
        </form>
    )

    // return (
    //     <Button
    //         text="SSO"
    //         icon={lockIcon}
    //         style={styleButton}
    //         styleIcon={styleButtonIcon}
    //         onClick={this.login}
    //     />
    // )
  }
}